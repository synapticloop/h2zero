plugins {
    id "java"
    id "eclipse"
    id "maven-publish"
    id "com.github.ben-manes.versions" version "0.51.0"
    id "com.gradle.plugin-publish" version "1.2.1"
    id "synapticloop.copyrightr" version "1.3.1"
}

version = findProperty("h2zero.version")
group = 'com.synapticloop'

tasks.withType(Javadoc).all { enabled = false }

allprojects {
    tasks.withType(Javadoc).all { enabled = false }
}
repositories {
    mavenLocal()
    mavenCentral()
}

task testJavadoc(type: Javadoc) {
    source = sourceSets.test.allJava
    classpath = sourceSets.test.compileClasspath
    // if not changed the destinationDir, the javadoc for production code is overridden.
    destinationDir = file("${buildDir}/docs/testjavadoc")
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

dependencies {
    implementation "com.synapticloop:templar:2.0.0"
    implementation "org.json:json:20240303"
    implementation "com.mchange:c3p0:0.10.0"
    implementation "commons-validator:commons-validator:1.8.0"
    implementation 'org.slf4j:slf4j-api:2.0.13'
    implementation "javax.mail:javax.mail-api:1.6.2"
    implementation "org.apache.ant:ant:1.10.14"
    implementation 'org.reflections:reflections:0.10.2'

    compileOnly gradleApi()

    // this is for the tests
    testImplementation "junit:junit:4.13.2"
    testImplementation "org.mockito:mockito-core:5.11.0"
    testImplementation "com.github.stefanbirkner:system-rules:1.19.0"

    testImplementation 'com.mchange:c3p0:0.10.0'
    testImplementation 'org.xerial:sqlite-jdbc:3.42.0.1'
    testImplementation 'org.mariadb.jdbc:mariadb-java-client:3.3.3'

}

configurations.all {
    resolutionStrategy {
        failOnVersionConflict()
        force "junit:junit:4.13.2",
            "commons-logging:commons-logging:1.3.0",
            "org.json:json:20240303",
            "org.slf4j:slf4j-api:2.0.13",
            "org.checkerframework:checker-qual:3.32.0"
    }
}

jar {
    manifest {
        attributes(
            "Main-Class": "com.synapticloop.h2zero.Main",
            "Implementation-Version": version
        )
    }
}

test {
    include "**/*Test.class"
    maxParallelForks = 1
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId "com.synapticloop"
            artifactId "h2zero"
            version version

            from components.java
        }
    }
}

/*
 * The Gradle Plugin Publisher
 */
gradlePlugin {
    website = "https://github.com/synapticloop/h2zero"
    vcsUrl = "https://github.com/synapticloop/h2zero"

    plugins {
        h2zeroPlugin {
            id = "synapticloop.h2zero"
            implementationClass = "com.synapticloop.h2zero.plugin.gradle.H2ZeroPlugin"
            displayName = "Synapticloop Gradle h2zero plugin"
            description = "lightweight ORM Java code generator for SQL databases: mysql, sqlite3, postgresql, and cockroach - this utilises the templar templating language"
            tags = ["h2zero", "ORM", "generator"]
        }
    }
}

copyrightr {
    dryRun = false
    copyrightHolder = "synapticloop"
    includes = [
        "src/**/*.java",
        "src/**/*.groovy"
    ]

    excludes = [
        "src/test/java/**/*.java",
        "**/*.class"
    ]

    onlyReplaceFirst = true

    yearSeparator = " - "

    failOnMissing = false
}
