package synapticloop.sample.h2zero.sqlite3.test.util;

// - - - - thoughtfully generated by synapticloop h2zero - - - - 
//    with the use of synapticloop templar templating language
//               (tests/java-finder-test.templar)


import static org.junit.Assert.*;

import org.junit.Assert;
import org.junit.Test;
import synapticloop.h2zero.base.manager.sqlite3.ConnectionManager;
import synapticloop.h2zero.base.exception.H2ZeroFinderException;
import synapticloop.h2zero.base.manager.BaseConnectionManager;

import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.sql.*;


import synapticloop.sample.h2zero.sqlite3.finder.AllTypesFinder;
import synapticloop.sample.h2zero.sqlite3.finder.AuthorStatusFinder;
import synapticloop.sample.h2zero.sqlite3.finder.AuthorFinder;
import synapticloop.sample.h2zero.sqlite3.finder.UserTypeFinder;
import synapticloop.sample.h2zero.sqlite3.finder.UserTitleFinder;
import synapticloop.sample.h2zero.sqlite3.finder.UserFinder;
import synapticloop.sample.h2zero.sqlite3.finder.PetFinder;
import synapticloop.sample.h2zero.sqlite3.finder.UserPetFinder;

/**
 * WARNING NOTE: these tests are designed to test the generated SQL statements
 * __NOT__ whether the database actually returns sane results.
 * 
 * These will also test to ensure that connections are setting closed properly
 * so that there ar no resource leakages.
 */

public class FinderTest extends DatabaseSetupTest {

	@Test
	public void testAllTypesFindByPrimaryKey() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		// this shouldn't find anything - and we don't care - only about SQLExceptions
		try {
			AllTypesFinder.findByPrimaryKey(1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindByPrimaryKeySilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertNull(AllTypesFinder.findByPrimaryKeySilent(-831486134981L));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindByPrimaryKeyWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByPrimaryKey(connection, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindByPrimaryKeyWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertNull(AllTypesFinder.findByPrimaryKeySilent(connection, -831486134981L));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindAll() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(0, AllTypesFinder.findAll().size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindAllLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(0, AllTypesFinder.findAll(1, 0).size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindAllSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(0, AllTypesFinder.findAllSilent().size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindAllLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(0, AllTypesFinder.findAllSilent(1, 0).size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindAllWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, AllTypesFinder.findAll(connection).size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindAllWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, AllTypesFinder.findAllSilent(connection).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindAllWithConnectionLimit() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findAll(connection, 1, 0);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindAllWithConnectionLimitSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, AllTypesFinder.findAllSilent(connection, 1, 0).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindAllWithConnectionOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findAll(connection, null, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindAllWithConnectionOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findAll(connection, null, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindAllWithConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findAll(connection, 1, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesFindAllWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findAll(null, 1, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindByPrimaryKey() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		// this shouldn't find anything - and we don't care - only about SQLExceptions
		try {
			AuthorStatusFinder.findByPrimaryKey(1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindByPrimaryKeySilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertNull(AuthorStatusFinder.findByPrimaryKeySilent(-831486134981L));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindByPrimaryKeyWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorStatusFinder.findByPrimaryKey(connection, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindByPrimaryKeyWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertNull(AuthorStatusFinder.findByPrimaryKeySilent(connection, -831486134981L));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindAll() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(4, AuthorStatusFinder.findAll().size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindAllLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(1, AuthorStatusFinder.findAll(1, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindAllSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(4, AuthorStatusFinder.findAllSilent().size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindAllLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(1, AuthorStatusFinder.findAllSilent(1, 0).size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindAllWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, AuthorStatusFinder.findAll(connection).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindAllWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, AuthorStatusFinder.findAllSilent(connection).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindAllWithConnectionLimit() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(1, AuthorStatusFinder.findAll(connection, 1, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindAllWithConnectionLimitSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(1, AuthorStatusFinder.findAllSilent(connection, 1, 0).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindAllWithConnectionOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, AuthorStatusFinder.findAll(connection, null, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindAllWithConnectionOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, AuthorStatusFinder.findAll(connection, null, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindAllWithConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(1, AuthorStatusFinder.findAll(connection, 1, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorStatusFindAllWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(1, AuthorStatusFinder.findAll(null, 1, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindByPrimaryKey() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		// this shouldn't find anything - and we don't care - only about SQLExceptions
		try {
			AuthorFinder.findByPrimaryKey(1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindByPrimaryKeySilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertNull(AuthorFinder.findByPrimaryKeySilent(-831486134981L));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindByPrimaryKeyWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findByPrimaryKey(connection, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindByPrimaryKeyWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertNull(AuthorFinder.findByPrimaryKeySilent(connection, -831486134981L));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindAll() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(0, AuthorFinder.findAll().size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindAllLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(0, AuthorFinder.findAll(1, 0).size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindAllSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(0, AuthorFinder.findAllSilent().size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindAllLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(0, AuthorFinder.findAllSilent(1, 0).size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindAllWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, AuthorFinder.findAll(connection).size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindAllWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, AuthorFinder.findAllSilent(connection).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindAllWithConnectionLimit() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findAll(connection, 1, 0);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindAllWithConnectionLimitSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, AuthorFinder.findAllSilent(connection, 1, 0).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindAllWithConnectionOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findAll(connection, null, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindAllWithConnectionOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findAll(connection, null, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindAllWithConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findAll(connection, 1, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorFindAllWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findAll(null, 1, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindByPrimaryKey() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		// this shouldn't find anything - and we don't care - only about SQLExceptions
		try {
			UserTypeFinder.findByPrimaryKey(1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindByPrimaryKeySilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertNull(UserTypeFinder.findByPrimaryKeySilent(-831486134981L));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindByPrimaryKeyWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserTypeFinder.findByPrimaryKey(connection, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindByPrimaryKeyWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertNull(UserTypeFinder.findByPrimaryKeySilent(connection, -831486134981L));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindAll() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(4, UserTypeFinder.findAll().size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindAllLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(1, UserTypeFinder.findAll(1, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindAllSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(4, UserTypeFinder.findAllSilent().size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindAllLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(1, UserTypeFinder.findAllSilent(1, 0).size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindAllWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, UserTypeFinder.findAll(connection).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindAllWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, UserTypeFinder.findAllSilent(connection).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindAllWithConnectionLimit() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(1, UserTypeFinder.findAll(connection, 1, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindAllWithConnectionLimitSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(1, UserTypeFinder.findAllSilent(connection, 1, 0).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindAllWithConnectionOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, UserTypeFinder.findAll(connection, null, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindAllWithConnectionOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, UserTypeFinder.findAll(connection, null, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindAllWithConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(1, UserTypeFinder.findAll(connection, 1, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTypeFindAllWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(1, UserTypeFinder.findAll(null, 1, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindByPrimaryKey() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		// this shouldn't find anything - and we don't care - only about SQLExceptions
		try {
			UserTitleFinder.findByPrimaryKey(1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindByPrimaryKeySilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertNull(UserTitleFinder.findByPrimaryKeySilent(-831486134981L));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindByPrimaryKeyWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserTitleFinder.findByPrimaryKey(connection, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindByPrimaryKeyWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertNull(UserTitleFinder.findByPrimaryKeySilent(connection, -831486134981L));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindAll() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(4, UserTitleFinder.findAll().size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindAllLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(1, UserTitleFinder.findAll(1, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindAllSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(4, UserTitleFinder.findAllSilent().size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindAllLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(1, UserTitleFinder.findAllSilent(1, 0).size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindAllWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, UserTitleFinder.findAll(connection).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindAllWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, UserTitleFinder.findAllSilent(connection).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindAllWithConnectionLimit() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(1, UserTitleFinder.findAll(connection, 1, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindAllWithConnectionLimitSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(1, UserTitleFinder.findAllSilent(connection, 1, 0).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindAllWithConnectionOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, UserTitleFinder.findAll(connection, null, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindAllWithConnectionOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, UserTitleFinder.findAll(connection, null, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindAllWithConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(1, UserTitleFinder.findAll(connection, 1, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitleFindAllWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(1, UserTitleFinder.findAll(null, 1, 0).size());
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindByPrimaryKey() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		// this shouldn't find anything - and we don't care - only about SQLExceptions
		try {
			UserFinder.findByPrimaryKey(1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindByPrimaryKeySilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertNull(UserFinder.findByPrimaryKeySilent(-831486134981L));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindByPrimaryKeyWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByPrimaryKey(connection, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindByPrimaryKeyWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertNull(UserFinder.findByPrimaryKeySilent(connection, -831486134981L));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindAll() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(0, UserFinder.findAll().size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindAllLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(0, UserFinder.findAll(1, 0).size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindAllSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(0, UserFinder.findAllSilent().size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindAllLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(0, UserFinder.findAllSilent(1, 0).size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindAllWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, UserFinder.findAll(connection).size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindAllWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, UserFinder.findAllSilent(connection).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindAllWithConnectionLimit() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findAll(connection, 1, 0);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindAllWithConnectionLimitSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, UserFinder.findAllSilent(connection, 1, 0).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindAllWithConnectionOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findAll(connection, null, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindAllWithConnectionOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findAll(connection, null, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindAllWithConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findAll(connection, 1, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserFindAllWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findAll(null, 1, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindByPrimaryKey() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		// this shouldn't find anything - and we don't care - only about SQLExceptions
		try {
			PetFinder.findByPrimaryKey(1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindByPrimaryKeySilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertNull(PetFinder.findByPrimaryKeySilent(-831486134981L));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindByPrimaryKeyWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			PetFinder.findByPrimaryKey(connection, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindByPrimaryKeyWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertNull(PetFinder.findByPrimaryKeySilent(connection, -831486134981L));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindAll() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(0, PetFinder.findAll().size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindAllLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(0, PetFinder.findAll(1, 0).size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindAllSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(0, PetFinder.findAllSilent().size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindAllLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(0, PetFinder.findAllSilent(1, 0).size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindAllWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, PetFinder.findAll(connection).size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindAllWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, PetFinder.findAllSilent(connection).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindAllWithConnectionLimit() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			PetFinder.findAll(connection, 1, 0);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindAllWithConnectionLimitSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, PetFinder.findAllSilent(connection, 1, 0).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindAllWithConnectionOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			PetFinder.findAll(connection, null, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindAllWithConnectionOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			PetFinder.findAll(connection, null, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindAllWithConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			PetFinder.findAll(connection, 1, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetFindAllWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			PetFinder.findAll(null, 1, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindByPrimaryKey() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		// this shouldn't find anything - and we don't care - only about SQLExceptions
		try {
			UserPetFinder.findByPrimaryKey(1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindByPrimaryKeySilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertNull(UserPetFinder.findByPrimaryKeySilent(-831486134981L));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindByPrimaryKeyWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserPetFinder.findByPrimaryKey(connection, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindByPrimaryKeyWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertNull(UserPetFinder.findByPrimaryKeySilent(connection, -831486134981L));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindAll() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(0, UserPetFinder.findAll().size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindAllLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			Assert.assertEquals(0, UserPetFinder.findAll(1, 0).size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindAllSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(0, UserPetFinder.findAllSilent().size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindAllLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		Assert.assertEquals(0, UserPetFinder.findAllSilent(1, 0).size());

		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindAllWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, UserPetFinder.findAll(connection).size());
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindAllWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, UserPetFinder.findAllSilent(connection).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindAllWithConnectionLimit() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserPetFinder.findAll(connection, 1, 0);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindAllWithConnectionLimitSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, UserPetFinder.findAllSilent(connection, 1, 0).size());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindAllWithConnectionOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserPetFinder.findAll(connection, null, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindAllWithConnectionOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserPetFinder.findAll(connection, null, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindAllWithConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserPetFinder.findAll(connection, 1, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserPetFindAllWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserPetFinder.findAll(null, 1, 1);
			Assert.fail("This method should have thrown an H2ZeroFinderException...");
		} catch (H2ZeroFinderException ex) {
			// do nothing - don't care
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByIdAllTypes() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByIdAllTypes(1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByIdAllTypesSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByIdAllTypesSilent(1L);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByIdAllTypesLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByIdAllTypes(1L, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByIdAllTypesLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByIdAllTypesSilent(1L,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByIdAllTypesWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByIdAllTypes(connection, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByIdAllTypesWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByIdAllTypesSilent(connection, 1L);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByIdAllTypesWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByIdAllTypes(null, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByIdAllTypesWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByIdAllTypesSilent(null, 1L);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByIdAllTypesWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByIdAllTypes(null, 1L, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByIdAllTypesWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByIdAllTypesSilent(null, 1L, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByIdAllTypesWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByIdAllTypes(null, 1L, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByIdAllTypesWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByIdAllTypesSilent(null, 1L, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBigint() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestBigint(1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBigintSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestBigintSilent(1L);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBigintLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestBigint(1L, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBigintLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestBigintSilent(1L,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBigintWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestBigint(connection, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBigintWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestBigintSilent(connection, 1L);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBigintWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestBigint(null, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBigintWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestBigintSilent(null, 1L);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBigintWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestBigint(null, 1L, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBigintWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestBigintSilent(null, 1L, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBigintWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestBigint(null, 1L, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBigintWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestBigintSilent(null, 1L, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBoolean() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestBoolean(true);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBooleanSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestBooleanSilent(true);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBooleanLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestBoolean(true, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBooleanLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestBooleanSilent(true,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBooleanWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestBoolean(connection, true);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBooleanWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestBooleanSilent(connection, true);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBooleanWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestBoolean(null, true);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBooleanWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestBooleanSilent(null, true);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBooleanWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestBoolean(null, true, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBooleanWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestBooleanSilent(null, true, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBooleanWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestBoolean(null, true, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestBooleanWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestBooleanSilent(null, true, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDate() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDate(new java.sql.Date(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDateSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDateSilent(new java.sql.Date(System.currentTimeMillis()));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDateLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDate(new java.sql.Date(System.currentTimeMillis()), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDateLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDateSilent(new java.sql.Date(System.currentTimeMillis()),  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDateWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestDate(connection, new java.sql.Date(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDateWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestDateSilent(connection, new java.sql.Date(System.currentTimeMillis()));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDateWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDate(null, new java.sql.Date(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDateWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDateSilent(null, new java.sql.Date(System.currentTimeMillis()));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDateWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDate(null, new java.sql.Date(System.currentTimeMillis()), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDateWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDateSilent(null, new java.sql.Date(System.currentTimeMillis()), 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDateWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDate(null, new java.sql.Date(System.currentTimeMillis()), null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDateWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDateSilent(null, new java.sql.Date(System.currentTimeMillis()), null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDatetime() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDatetime(new java.sql.Timestamp(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDatetimeSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDatetimeSilent(new java.sql.Timestamp(System.currentTimeMillis()));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDatetimeLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDatetime(new java.sql.Timestamp(System.currentTimeMillis()), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDatetimeLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDatetimeSilent(new java.sql.Timestamp(System.currentTimeMillis()),  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDatetimeWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestDatetime(connection, new java.sql.Timestamp(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDatetimeWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestDatetimeSilent(connection, new java.sql.Timestamp(System.currentTimeMillis()));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDatetimeWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDatetime(null, new java.sql.Timestamp(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDatetimeWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDatetimeSilent(null, new java.sql.Timestamp(System.currentTimeMillis()));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDatetimeWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDatetime(null, new java.sql.Timestamp(System.currentTimeMillis()), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDatetimeWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDatetimeSilent(null, new java.sql.Timestamp(System.currentTimeMillis()), 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDatetimeWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDatetime(null, new java.sql.Timestamp(System.currentTimeMillis()), null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDatetimeWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDatetimeSilent(null, new java.sql.Timestamp(System.currentTimeMillis()), null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDouble() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDouble(0.0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDoubleSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDoubleSilent(0.0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDoubleLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDouble(0.0, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDoubleLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDoubleSilent(0.0,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDoubleWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestDouble(connection, 0.0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDoubleWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestDoubleSilent(connection, 0.0);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDoubleWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDouble(null, 0.0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDoubleWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDoubleSilent(null, 0.0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDoubleWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDouble(null, 0.0, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDoubleWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDoubleSilent(null, 0.0, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDoubleWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestDouble(null, 0.0, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestDoubleWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestDoubleSilent(null, 0.0, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestFloat() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestFloat(0.0f);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestFloatSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestFloatSilent(0.0f);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestFloatLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestFloat(0.0f, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestFloatLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestFloatSilent(0.0f,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestFloatWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestFloat(connection, 0.0f);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestFloatWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestFloatSilent(connection, 0.0f);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestFloatWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestFloat(null, 0.0f);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestFloatWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestFloatSilent(null, 0.0f);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestFloatWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestFloat(null, 0.0f, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestFloatWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestFloatSilent(null, 0.0f, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestFloatWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestFloat(null, 0.0f, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestFloatWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestFloatSilent(null, 0.0f, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestInt() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestInt(1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestIntSilent(1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestInt(1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestIntSilent(1,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestInt(connection, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestIntSilent(connection, 1);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestInt(null, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestIntSilent(null, 1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestInt(null, 1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestIntSilent(null, 1, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestInt(null, 1, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestIntSilent(null, 1, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestInteger() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestInteger(1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntegerSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestIntegerSilent(1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntegerLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestInteger(1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntegerLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestIntegerSilent(1,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntegerWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestInteger(connection, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntegerWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestIntegerSilent(connection, 1);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntegerWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestInteger(null, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntegerWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestIntegerSilent(null, 1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntegerWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestInteger(null, 1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntegerWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestIntegerSilent(null, 1, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntegerWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestInteger(null, 1, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestIntegerWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestIntegerSilent(null, 1, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestMediumint() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestMediumint(1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestMediumintSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestMediumintSilent(1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestMediumintLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestMediumint(1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestMediumintLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestMediumintSilent(1,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestMediumintWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestMediumint(connection, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestMediumintWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestMediumintSilent(connection, 1);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestMediumintWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestMediumint(null, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestMediumintWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestMediumintSilent(null, 1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestMediumintWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestMediumint(null, 1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestMediumintWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestMediumintSilent(null, 1, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestMediumintWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestMediumint(null, 1, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestMediumintWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestMediumintSilent(null, 1, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestNumeric() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestNumeric(new java.math.BigDecimal("0.0"));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestNumericSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestNumericSilent(new java.math.BigDecimal("0.0"));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestNumericLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestNumeric(new java.math.BigDecimal("0.0"), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestNumericLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestNumericSilent(new java.math.BigDecimal("0.0"),  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestNumericWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestNumeric(connection, new java.math.BigDecimal("0.0"));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestNumericWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestNumericSilent(connection, new java.math.BigDecimal("0.0"));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestNumericWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestNumeric(null, new java.math.BigDecimal("0.0"));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestNumericWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestNumericSilent(null, new java.math.BigDecimal("0.0"));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestNumericWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestNumeric(null, new java.math.BigDecimal("0.0"), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestNumericWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestNumericSilent(null, new java.math.BigDecimal("0.0"), 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestNumericWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestNumeric(null, new java.math.BigDecimal("0.0"), null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestNumericWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestNumericSilent(null, new java.math.BigDecimal("0.0"), null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestSmallint() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestSmallint((short) 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestSmallintSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestSmallintSilent((short) 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestSmallintLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestSmallint((short) 0, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestSmallintLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestSmallintSilent((short) 0,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestSmallintWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestSmallint(connection, (short) 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestSmallintWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestSmallintSilent(connection, (short) 0);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestSmallintWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestSmallint(null, (short) 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestSmallintWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestSmallintSilent(null, (short) 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestSmallintWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestSmallint(null, (short) 0, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestSmallintWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestSmallintSilent(null, (short) 0, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestSmallintWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestSmallint(null, (short) 0, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestSmallintWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestSmallintSilent(null, (short) 0, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestText() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestText("text");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTextSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestTextSilent("text");
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTextLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestText("text", 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTextLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestTextSilent("text",  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTextWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestText(connection, "text");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTextWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestTextSilent(connection, "text");
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTextWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestText(null, "text");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTextWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestTextSilent(null, "text");
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTextWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestText(null, "text", 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTextWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestTextSilent(null, "text", 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTextWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestText(null, "text", null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTextWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestTextSilent(null, "text", null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTinyint() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestTinyint(true);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTinyintSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestTinyintSilent(true);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTinyintLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestTinyint(true, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTinyintLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestTinyintSilent(true,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTinyintWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestTinyint(connection, true);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTinyintWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestTinyintSilent(connection, true);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTinyintWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestTinyint(null, true);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTinyintWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestTinyintSilent(null, true);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTinyintWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestTinyint(null, true, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTinyintWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestTinyintSilent(null, true, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTinyintWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestTinyint(null, true, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestTinyintWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestTinyintSilent(null, true, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestVarchar() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestVarchar("varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestVarcharSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestVarcharSilent("varchar");
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestVarcharLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestVarchar("varchar", 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestVarcharLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestVarcharSilent("varchar",  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestVarcharWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestVarchar(connection, "varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestVarcharWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestVarcharSilent(connection, "varchar");
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestVarcharWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestVarchar(null, "varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestVarcharWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestVarcharSilent(null, "varchar");
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestVarcharWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestVarchar(null, "varchar", 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestVarcharWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestVarcharSilent(null, "varchar", 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestVarcharWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AllTypesFinder.findByTestVarchar(null, "varchar", null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAllTypesfindByTestVarcharWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AllTypesFinder.findByTestVarcharSilent(null, "varchar", null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByIdAuthorStatus() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByIdAuthorStatus(1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByIdAuthorStatusSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByIdAuthorStatusSilent(1L);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByIdAuthorStatusLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByIdAuthorStatus(1L, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByIdAuthorStatusLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByIdAuthorStatusSilent(1L,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByIdAuthorStatusWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findByIdAuthorStatus(connection, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByIdAuthorStatusWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findByIdAuthorStatusSilent(connection, 1L);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByIdAuthorStatusWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByIdAuthorStatus(null, 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByIdAuthorStatusWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByIdAuthorStatusSilent(null, 1L);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByIdAuthorStatusWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByIdAuthorStatus(null, 1L, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByIdAuthorStatusWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByIdAuthorStatusSilent(null, 1L, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByIdAuthorStatusWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByIdAuthorStatus(null, 1L, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByIdAuthorStatusWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByIdAuthorStatusSilent(null, 1L, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByFlIsUpdating() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByFlIsUpdating(true);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByFlIsUpdatingSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByFlIsUpdatingSilent(true);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByFlIsUpdatingLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByFlIsUpdating(true, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByFlIsUpdatingLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByFlIsUpdatingSilent(true,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByFlIsUpdatingWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findByFlIsUpdating(connection, true);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByFlIsUpdatingWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findByFlIsUpdatingSilent(connection, true);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByFlIsUpdatingWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByFlIsUpdating(null, true);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByFlIsUpdatingWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByFlIsUpdatingSilent(null, true);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByFlIsUpdatingWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByFlIsUpdating(null, true, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByFlIsUpdatingWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByFlIsUpdatingSilent(null, true, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByFlIsUpdatingWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByFlIsUpdating(null, true, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByFlIsUpdatingWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByFlIsUpdatingSilent(null, true, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorIdAuthorStatus() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByTxtIdAuthorIdAuthorStatus("varchar", 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorIdAuthorStatusSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByTxtIdAuthorIdAuthorStatusSilent("varchar", 1L);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorIdAuthorStatusLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByTxtIdAuthorIdAuthorStatus("varchar", 1L, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorIdAuthorStatusLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByTxtIdAuthorIdAuthorStatusSilent("varchar", 1L,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorIdAuthorStatusWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findByTxtIdAuthorIdAuthorStatus(connection, "varchar", 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorIdAuthorStatusWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findByTxtIdAuthorIdAuthorStatusSilent(connection, "varchar", 1L);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorIdAuthorStatusWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByTxtIdAuthorIdAuthorStatus(null, "varchar", 1L);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorIdAuthorStatusWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByTxtIdAuthorIdAuthorStatusSilent(null, "varchar", 1L);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorIdAuthorStatusWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByTxtIdAuthorIdAuthorStatus(null, "varchar", 1L, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorIdAuthorStatusWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByTxtIdAuthorIdAuthorStatusSilent(null, "varchar", 1L, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorIdAuthorStatusWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByTxtIdAuthorIdAuthorStatus(null, "varchar", 1L, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorIdAuthorStatusWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByTxtIdAuthorIdAuthorStatusSilent(null, "varchar", 1L, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthor() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByTxtIdAuthor("varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByTxtIdAuthorSilent("varchar");
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByTxtIdAuthor("varchar", 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByTxtIdAuthorSilent("varchar",  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findByTxtIdAuthor(connection, "varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findByTxtIdAuthorSilent(connection, "varchar");
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByTxtIdAuthor(null, "varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByTxtIdAuthorSilent(null, "varchar");
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByTxtIdAuthor(null, "varchar", 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByTxtIdAuthorSilent(null, "varchar", 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findByTxtIdAuthor(null, "varchar", null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindByTxtIdAuthorWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findByTxtIdAuthorSilent(null, "varchar", null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInStatus() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findInStatus(new ArrayList<Long>());
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInStatusSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findInStatusSilent(new ArrayList<Long>());
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInStatusLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findInStatus(new ArrayList<Long>(), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInStatusLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findInStatusSilent(new ArrayList<Long>(),  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInStatusWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findInStatus(connection, new ArrayList<Long>());
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInStatusWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findInStatusSilent(connection, new ArrayList<Long>());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInStatusWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findInStatus(null, new ArrayList<Long>());
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInStatusWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findInStatusSilent(null, new ArrayList<Long>());
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInStatusWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findInStatus(null, new ArrayList<Long>(), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInStatusWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findInStatusSilent(null, new ArrayList<Long>(), 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInStatusWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findInStatus(null, new ArrayList<Long>(), null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInStatusWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findInStatusSilent(null, new ArrayList<Long>(), null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindAllToBeEvaluated() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findAllToBeEvaluated(new java.sql.Timestamp(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindAllToBeEvaluatedSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findAllToBeEvaluatedSilent(new java.sql.Timestamp(System.currentTimeMillis()));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindAllToBeEvaluatedLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findAllToBeEvaluated(new java.sql.Timestamp(System.currentTimeMillis()), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindAllToBeEvaluatedLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findAllToBeEvaluatedSilent(new java.sql.Timestamp(System.currentTimeMillis()),  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindAllToBeEvaluatedWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findAllToBeEvaluated(connection, new java.sql.Timestamp(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindAllToBeEvaluatedWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findAllToBeEvaluatedSilent(connection, new java.sql.Timestamp(System.currentTimeMillis()));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindAllToBeEvaluatedWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findAllToBeEvaluated(null, new java.sql.Timestamp(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindAllToBeEvaluatedWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findAllToBeEvaluatedSilent(null, new java.sql.Timestamp(System.currentTimeMillis()));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindAllToBeEvaluatedWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findAllToBeEvaluated(null, new java.sql.Timestamp(System.currentTimeMillis()), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindAllToBeEvaluatedWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findAllToBeEvaluatedSilent(null, new java.sql.Timestamp(System.currentTimeMillis()), 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindAllToBeEvaluatedWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findAllToBeEvaluated(null, new java.sql.Timestamp(System.currentTimeMillis()), null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindAllToBeEvaluatedWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findAllToBeEvaluatedSilent(null, new java.sql.Timestamp(System.currentTimeMillis()), null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindFirstToBeEvaluated() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findFirstToBeEvaluated(new java.sql.Timestamp(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindFirstToBeEvaluatedSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findFirstToBeEvaluatedSilent(new java.sql.Timestamp(System.currentTimeMillis()));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindFirstToBeEvaluatedLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findFirstToBeEvaluated(new java.sql.Timestamp(System.currentTimeMillis()), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindFirstToBeEvaluatedLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findFirstToBeEvaluatedSilent(new java.sql.Timestamp(System.currentTimeMillis()),  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindFirstToBeEvaluatedWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findFirstToBeEvaluated(connection, new java.sql.Timestamp(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindFirstToBeEvaluatedWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findFirstToBeEvaluatedSilent(connection, new java.sql.Timestamp(System.currentTimeMillis()));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindFirstToBeEvaluatedWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findFirstToBeEvaluated(null, new java.sql.Timestamp(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindFirstToBeEvaluatedWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findFirstToBeEvaluatedSilent(null, new java.sql.Timestamp(System.currentTimeMillis()));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindFirstToBeEvaluatedWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findFirstToBeEvaluated(null, new java.sql.Timestamp(System.currentTimeMillis()), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindFirstToBeEvaluatedWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findFirstToBeEvaluatedSilent(null, new java.sql.Timestamp(System.currentTimeMillis()), 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindFirstToBeEvaluatedWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findFirstToBeEvaluated(null, new java.sql.Timestamp(System.currentTimeMillis()), null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindFirstToBeEvaluatedWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findFirstToBeEvaluatedSilent(null, new java.sql.Timestamp(System.currentTimeMillis()), null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindLimitedToBeEvaluated() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findLimitedToBeEvaluated(new java.sql.Timestamp(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindLimitedToBeEvaluatedSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findLimitedToBeEvaluatedSilent(new java.sql.Timestamp(System.currentTimeMillis()));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindLimitedToBeEvaluatedLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findLimitedToBeEvaluated(new java.sql.Timestamp(System.currentTimeMillis()), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindLimitedToBeEvaluatedLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findLimitedToBeEvaluatedSilent(new java.sql.Timestamp(System.currentTimeMillis()),  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindLimitedToBeEvaluatedWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findLimitedToBeEvaluated(connection, new java.sql.Timestamp(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindLimitedToBeEvaluatedWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findLimitedToBeEvaluatedSilent(connection, new java.sql.Timestamp(System.currentTimeMillis()));
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindLimitedToBeEvaluatedWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findLimitedToBeEvaluated(null, new java.sql.Timestamp(System.currentTimeMillis()));
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindLimitedToBeEvaluatedWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findLimitedToBeEvaluatedSilent(null, new java.sql.Timestamp(System.currentTimeMillis()));
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindLimitedToBeEvaluatedWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findLimitedToBeEvaluated(null, new java.sql.Timestamp(System.currentTimeMillis()), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindLimitedToBeEvaluatedWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findLimitedToBeEvaluatedSilent(null, new java.sql.Timestamp(System.currentTimeMillis()), 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindLimitedToBeEvaluatedWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findLimitedToBeEvaluated(null, new java.sql.Timestamp(System.currentTimeMillis()), null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindLimitedToBeEvaluatedWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findLimitedToBeEvaluatedSilent(null, new java.sql.Timestamp(System.currentTimeMillis()), null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInNumber() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findInNumber(true, new ArrayList<Boolean>(), new ArrayList<Timestamp>(), true, true);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInNumberSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findInNumberSilent(true, new ArrayList<Boolean>(), new ArrayList<Timestamp>(), true, true);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInNumberLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findInNumber(true, new ArrayList<Boolean>(), new ArrayList<Timestamp>(), true, true, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInNumberLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findInNumberSilent(true, new ArrayList<Boolean>(), new ArrayList<Timestamp>(), true, true,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInNumberWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findInNumber(connection, true, new ArrayList<Boolean>(), new ArrayList<Timestamp>(), true, true);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInNumberWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			AuthorFinder.findInNumberSilent(connection, true, new ArrayList<Boolean>(), new ArrayList<Timestamp>(), true, true);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInNumberWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findInNumber(null, true, new ArrayList<Boolean>(), new ArrayList<Timestamp>(), true, true);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInNumberWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findInNumberSilent(null, true, new ArrayList<Boolean>(), new ArrayList<Timestamp>(), true, true);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInNumberWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findInNumber(null, true, new ArrayList<Boolean>(), new ArrayList<Timestamp>(), true, true, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInNumberWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findInNumberSilent(null, true, new ArrayList<Boolean>(), new ArrayList<Timestamp>(), true, true, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInNumberWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			AuthorFinder.findInNumber(null, true, new ArrayList<Boolean>(), new ArrayList<Timestamp>(), true, true, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testAuthorfindInNumberWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		AuthorFinder.findInNumberSilent(null, true, new ArrayList<Boolean>(), new ArrayList<Timestamp>(), true, true, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrdered() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserTitleFinder.findIdUserTitleNmUserTitleOrdered();
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserTitleFinder.findIdUserTitleNmUserTitleOrderedSilent();
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserTitleFinder.findIdUserTitleNmUserTitleOrdered(0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserTitleFinder.findIdUserTitleNmUserTitleOrderedSilent( 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserTitleFinder.findIdUserTitleNmUserTitleOrdered(connection);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserTitleFinder.findIdUserTitleNmUserTitleOrderedSilent(connection);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserTitleFinder.findIdUserTitleNmUserTitleOrdered(null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserTitleFinder.findIdUserTitleNmUserTitleOrderedSilent(null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserTitleFinder.findIdUserTitleNmUserTitleOrdered(null, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserTitleFinder.findIdUserTitleNmUserTitleOrderedSilent(null, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserTitleFinder.findIdUserTitleNmUserTitleOrdered(null, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserTitleFinder.findIdUserTitleNmUserTitleOrderedSilent(null, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindAllOrdered() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserTitleFinder.findAllOrdered();
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindAllOrderedSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserTitleFinder.findAllOrderedSilent();
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindAllOrderedLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserTitleFinder.findAllOrdered(0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindAllOrderedLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserTitleFinder.findAllOrderedSilent( 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindAllOrderedWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserTitleFinder.findAllOrdered(connection);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindAllOrderedWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserTitleFinder.findAllOrderedSilent(connection);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindAllOrderedWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserTitleFinder.findAllOrdered(null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindAllOrderedWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserTitleFinder.findAllOrderedSilent(null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindAllOrderedWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserTitleFinder.findAllOrdered(null, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindAllOrderedWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserTitleFinder.findAllOrderedSilent(null, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindAllOrderedWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserTitleFinder.findAllOrdered(null, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserTitlefindAllOrderedWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserTitleFinder.findAllOrderedSilent(null, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAge() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAge(1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeSilent(1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAge(1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeSilent(1,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNumAge(connection, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNumAgeSilent(connection, 1);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAge(null, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeSilent(null, 1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAge(null, 1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeSilent(null, 1, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAge(null, 1, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeSilent(null, 1, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByFlIsAliveNumAge() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByFlIsAliveNumAge(true, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByFlIsAliveNumAgeSilent(true, 1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByFlIsAliveNumAge(true, 1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByFlIsAliveNumAgeSilent(true, 1,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByFlIsAliveNumAge(connection, true, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByFlIsAliveNumAgeSilent(connection, true, 1);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByFlIsAliveNumAge(null, true, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByFlIsAliveNumAgeSilent(null, true, 1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByFlIsAliveNumAge(null, true, 1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByFlIsAliveNumAgeSilent(null, true, 1, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByFlIsAliveNumAge(null, true, 1, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByFlIsAliveNumAgeSilent(null, true, 1, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNmUsername() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNmUsername("varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNmUsernameSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNmUsernameSilent("varchar");
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNmUsernameLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNmUsername("varchar", 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNmUsernameLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNmUsernameSilent("varchar",  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNmUsernameWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNmUsername(connection, "varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNmUsernameWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNmUsernameSilent(connection, "varchar");
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNmUsernameWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNmUsername(null, "varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNmUsernameWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNmUsernameSilent(null, "varchar");
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNmUsernameWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNmUsername(null, "varchar", 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNmUsernameWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNmUsernameSilent(null, "varchar", 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNmUsernameWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNmUsername(null, "varchar", null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNmUsernameWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNmUsernameSilent(null, "varchar", null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmail() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByTxtAddressEmail("varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByTxtAddressEmailSilent("varchar");
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByTxtAddressEmail("varchar", 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByTxtAddressEmailSilent("varchar",  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByTxtAddressEmail(connection, "varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByTxtAddressEmailSilent(connection, "varchar");
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByTxtAddressEmail(null, "varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByTxtAddressEmailSilent(null, "varchar");
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByTxtAddressEmail(null, "varchar", 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByTxtAddressEmailSilent(null, "varchar", 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByTxtAddressEmail(null, "varchar", null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByTxtAddressEmailSilent(null, "varchar", null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPassword() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByTxtAddressEmailTxtPassword("varchar", "varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByTxtAddressEmailTxtPasswordSilent("varchar", "varchar");
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByTxtAddressEmailTxtPassword("varchar", "varchar", 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByTxtAddressEmailTxtPasswordSilent("varchar", "varchar",  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByTxtAddressEmailTxtPassword(connection, "varchar", "varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByTxtAddressEmailTxtPasswordSilent(connection, "varchar", "varchar");
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByTxtAddressEmailTxtPassword(null, "varchar", "varchar");
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByTxtAddressEmailTxtPasswordSilent(null, "varchar", "varchar");
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByTxtAddressEmailTxtPassword(null, "varchar", "varchar", 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByTxtAddressEmailTxtPasswordSilent(null, "varchar", "varchar", 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByTxtAddressEmailTxtPassword(null, "varchar", "varchar", null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByTxtAddressEmailTxtPasswordSilent(null, "varchar", "varchar", null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindNmUsernameDtmSignup() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findNmUsernameDtmSignup();
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindNmUsernameDtmSignupSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findNmUsernameDtmSignupSilent();
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindNmUsernameDtmSignupLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findNmUsernameDtmSignup(0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindNmUsernameDtmSignupLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findNmUsernameDtmSignupSilent( 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findNmUsernameDtmSignup(connection);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findNmUsernameDtmSignupSilent(connection);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findNmUsernameDtmSignup(null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findNmUsernameDtmSignupSilent(null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findNmUsernameDtmSignup(null, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findNmUsernameDtmSignupSilent(null, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findNmUsernameDtmSignup(null, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findNmUsernameDtmSignupSilent(null, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindGroupNumAge() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findGroupNumAge();
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindGroupNumAgeSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findGroupNumAgeSilent();
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindGroupNumAgeLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findGroupNumAge(0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindGroupNumAgeLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findGroupNumAgeSilent( 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindGroupNumAgeWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findGroupNumAge(connection);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindGroupNumAgeWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findGroupNumAgeSilent(connection);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindGroupNumAgeWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findGroupNumAge(null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindGroupNumAgeWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findGroupNumAgeSilent(null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindGroupNumAgeWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findGroupNumAge(null, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindGroupNumAgeWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findGroupNumAgeSilent(null, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindGroupNumAgeWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findGroupNumAge(null, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindGroupNumAgeWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findGroupNumAgeSilent(null, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeIn() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAgeIn(new ArrayList<Integer>());
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeInSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeInSilent(new ArrayList<Integer>());
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeInLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAgeIn(new ArrayList<Integer>(), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeInLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeInSilent(new ArrayList<Integer>(),  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeInWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNumAgeIn(connection, new ArrayList<Integer>());
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeInWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNumAgeInSilent(connection, new ArrayList<Integer>());
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeInWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAgeIn(null, new ArrayList<Integer>());
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeInWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeInSilent(null, new ArrayList<Integer>());
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeInWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAgeIn(null, new ArrayList<Integer>(), 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeInWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeInSilent(null, new ArrayList<Integer>(), 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeInWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAgeIn(null, new ArrayList<Integer>(), null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeInWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeInSilent(null, new ArrayList<Integer>(), null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeBetween() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAgeBetween(1, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeBetweenSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeBetweenSilent(1, 1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeBetweenLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAgeBetween(1, 1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeBetweenLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeBetweenSilent(1, 1,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeBetweenWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNumAgeBetween(connection, 1, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeBetweenWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNumAgeBetweenSilent(connection, 1, 1);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeBetweenWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAgeBetween(null, 1, 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeBetweenWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeBetweenSilent(null, 1, 1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeBetweenWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAgeBetween(null, 1, 1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeBetweenWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeBetweenSilent(null, 1, 1, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeBetweenWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			UserFinder.findByNumAgeBetween(null, 1, 1, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testUserfindByNumAgeBetweenWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		UserFinder.findByNumAgeBetweenSilent(null, 1, 1, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetfindByNmPetNumAge() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			PetFinder.findByNmPetNumAge("varchar", 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetfindByNmPetNumAgeSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		PetFinder.findByNmPetNumAgeSilent("varchar", 1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetfindByNmPetNumAgeLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			PetFinder.findByNmPetNumAge("varchar", 1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetfindByNmPetNumAgeLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		PetFinder.findByNmPetNumAgeSilent("varchar", 1,  0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetfindByNmPetNumAgeWithConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			PetFinder.findByNmPetNumAge(connection, "varchar", 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetfindByNmPetNumAgeWithConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try (Connection connection = ConnectionManager.getConnection()) {
			PetFinder.findByNmPetNumAgeSilent(connection, "varchar", 1);
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetfindByNmPetNumAgeWithNullConnection() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			PetFinder.findByNmPetNumAge(null, "varchar", 1);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetfindByNmPetNumAgeWithNullConnectionSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		PetFinder.findByNmPetNumAgeSilent(null, "varchar", 1);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetfindByNmPetNumAgeWithNullConnectionLimitOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			PetFinder.findByNmPetNumAge(null, "varchar", 1, 0, 0);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetfindByNmPetNumAgeWithNullConnectionLimitOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		PetFinder.findByNmPetNumAgeSilent(null, "varchar", 1, 0, 0);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetfindByNmPetNumAgeWithNullConnectionNullLimitNullOffset() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		try {
			PetFinder.findByNmPetNumAge(null, "varchar", 1, null, null);
		} catch (H2ZeroFinderException ex) {
			// do nothing - expected condition
		}
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

	@Test
	public void testPetfindByNmPetNumAgeWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		int numConnections = BaseConnectionManager.comboPooledDataSource.getNumConnections();
		int numBusyConnections = BaseConnectionManager.comboPooledDataSource.getNumBusyConnections();
		PetFinder.findByNmPetNumAgeSilent(null, "varchar", 1, null, null);
		Assert.assertEquals(numConnections, BaseConnectionManager.comboPooledDataSource.getNumConnections());
		// need to sleep to ensure that the connection has time to close - hacky... :(
		try { Thread.sleep(1); } catch (InterruptedException e) { /* do nothing */ }
		Assert.assertEquals(numBusyConnections, BaseConnectionManager.comboPooledDataSource.getNumBusyConnections());
	}

}
