package synapticloop.sample.h2zero.sqlite3.impex;

// - - - - thoughtfully generated by synapticloop h2zero - - - - 
//    with the use of synapticloop templar templating language
//                 (/impex/impex-exporter.templar)

import synapticloop.h2zero.exception.H2ZeroParseException;
import java.io.BufferedWriter;
import synapticloop.sample.h2zero.sqlite3.finder.AllTypesFinder;
import synapticloop.sample.h2zero.sqlite3.model.AllTypes;
import java.util.List;
import java.io.IOException;

public class AllTypesExporter {
	public static void exportToFile(BufferedWriter bufferedWriter) throws IOException {
		List<AllTypes> all = AllTypesFinder.findAllSilent();
		for (AllTypes allTypes: all) {
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getIdAllTypes()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestBigint()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestBoolean()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestDate()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestDatetime()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestDouble()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestFloat()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestInt()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestInteger()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestMediumint()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestNumeric()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestSmallint()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestText()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestTinyint()));
			bufferedWriter.write("\t");
			bufferedWriter.write(ImpexConverter.convertToString(allTypes.getTestVarchar()));
			bufferedWriter.write("\n");
		}
	}

}