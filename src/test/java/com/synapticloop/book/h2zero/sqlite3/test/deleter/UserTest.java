package com.synapticloop.book.h2zero.sqlite3.test.deleter;

//        - - - - thoughtfully generated by synapticloop h2zero - - - -        
//          with the use of synapticloop templar templating language
//                    (/java/test/java-deleter-test.templar)


import static org.junit.Assert.*;

import org.junit.Assert;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import com.synapticloop.book.h2zero.sqlite3.ConnectionManagerInitialiserOverride;
import com.synapticloop.h2zero.base.exception.H2ZeroFinderException;
import com.synapticloop.h2zero.base.manager.sqlite3.ConnectionManager;
import com.synapticloop.book.h2zero.sqlite3.test.DatabaseSetupTest;


import java.math.*;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;


import com.synapticloop.book.h2zero.sqlite3.deleter.UserDeleter;

/**
 * WARNING NOTE: these tests are designed to test the generated SQL statements
 * __NOT__ whether the database actually returns sane results.
 */

public class UserTest extends DatabaseSetupTest {

	@Test
	public void testUserDeleteByPrimaryKey() throws SQLException {
		Assert.assertEquals(0, UserDeleter.deleteByPrimaryKey(1L).execute());
	}

	@Test
	public void testUserDeleteByPrimaryKeySilent() throws SQLException {
		Assert.assertEquals(0, UserDeleter.deleteByPrimaryKey(1L).executeSilent());
	}

	@Test
	public void testUserDeleteByPrimaryKeyWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, UserDeleter.deleteByPrimaryKey(1L).withConnection(connection).execute());
		}
	}

	@Test
	public void testUserDeleteByPrimaryKeyWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, UserDeleter.deleteByPrimaryKey(1L).withConnection(connection).executeSilent());
		}
	}

	@Test
	public void testUserDeleteAll() throws SQLException {
		Assert.assertEquals(0, UserDeleter.deleteAll().execute());
	}

	@Test
	public void testUserDeleteAllSilent() throws SQLException {
		Assert.assertEquals(0, UserDeleter.deleteAll().executeSilent());
	}

	@Test
	public void testUserDeleteAllWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, UserDeleter.deleteAll().withConnection(connection).execute());
		}
	}

	@Test
	public void testUserDeleteAllWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, UserDeleter.deleteAll().withConnection(connection).executeSilent());
		}
	}

}
