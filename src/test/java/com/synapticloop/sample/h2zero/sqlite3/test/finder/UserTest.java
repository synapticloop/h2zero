package com.synapticloop.sample.h2zero.sqlite3.test.finder;

// - - - - thoughtfully generated by synapticloop h2zero - - - - 
//    with the use of synapticloop templar templating language
//            (java/test/java-finder-test.templar)


import static org.junit.Assert.*;

import org.junit.Assert;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import com.synapticloop.sample.h2zero.sqlite3.ConnectionManagerInitialiserOverride;
import com.synapticloop.h2zero.base.manager.sqlite3.ConnectionManager;
import com.synapticloop.sample.h2zero.sqlite3.test.DatabaseSetupTest;


import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.sql.*;
import java.util.List;


import com.synapticloop.sample.h2zero.sqlite3.finder.UserFinder;

/**
 * WARNING NOTE: these tests are designed to test the generated SQL statements
 * __NOT__ whether the database actually returns sane results.
 * 
 * These will also test to ensure that connections are setting closed properly
 * so that there are no resource leakages.
 */

public class UserTest extends DatabaseSetupTest {

	@Test
	public void testUserFindByPrimaryKey() throws SQLException {
		UserFinder.findByPrimaryKey(1L)
				.execute();

	}

	@Test
	public void testUserFindByPrimaryKeySilent() throws SQLException {
		Assert.assertNull(UserFinder.findByPrimaryKey(-831486134981L)
				.executeSilent());

	}

	@Test
	public void testUserFindByPrimaryKeyWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByPrimaryKey(1L)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testUserFindByPrimaryKeyWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertNull(UserFinder.findByPrimaryKey(-831486134981L)
				.withConnection(connection)
				.executeSilent());
		}
	}

	@Test
	public void testUserFindAll() throws SQLException {
		Assert.assertEquals(0, UserFinder.findAll()
				.execute()
				.size());

	}

	@Test
	public void testUserFindAllLimitOffset() throws SQLException {
		Assert.assertEquals(0, UserFinder.findAll()
			.withLimit(1)
			.withOffset(0)
			.execute()
			.size());
	}

	@Test
	public void testUserFindAllSilent() throws SQLException {
		Assert.assertEquals(0, UserFinder.findAll()
				.executeSilent()
				.size());

	}

	@Test
	public void testUserFindAllLimitOffsetSilent() throws SQLException {
		Assert.assertEquals(0, UserFinder.findAll()
				.withLimit(1)
				.withOffset(0)
				.executeSilent()
				.size());
	}

	@Test
	public void testUserFindAllWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, UserFinder.findAll()
				.withConnection(connection)
				.execute()
				.size());

		}
	}

	@Test
	public void testUserFindAllWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, UserFinder.findAll()
				.withConnection(connection)
				.executeSilent()
				.size());
		}
	}

	@Test
	public void testUserFindAllWithConnectionLimit() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findAll().withConnection(connection)
				.withLimit(1)
				.withOffset(0)
				.execute();
		}

	}

	@Test
	public void testUserFindAllWithConnectionLimitSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, UserFinder.findAll()
				.withConnection(connection)
				.withLimit(1)
				.withOffset(0)
				.executeSilent()
				.size());
		}
	}

	@Test
	public void testUserFindAllWithConnectionOffset() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findAll()
				.withConnection(connection)
				.withLimit(null)
				.withOffset(1)
				.execute();
			Assert.fail("A SQL Exception should have been thrown as there was an offset without a limit set.");		} catch(SQLException ignored) {
		}
	}

	@Test
	public void testUserFindAllWithConnectionOffsetSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findAll()
				.withConnection(connection)
				.withLimit(null)
				.withOffset(0)
				.executeSilent();
		}
	}

	@Test
	public void testUserFindAllWithConnectionLimitOffset() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findAll()
				.withConnection(connection)
				.withLimit(1)
				.withOffset(0)
				.execute();
		}
	}

	@Test
	public void testUserFindAllWithNullConnectionLimitOffset() throws SQLException {
		UserFinder.findAll()
				.withConnection(null)
				.withLimit(1)
				.withOffset(0)
				.execute();

	}

	@Test
	public void testUserfindByNumAge() throws SQLException {
		UserFinder.findByNumAge(1).execute();
	}

	@Test
	public void testUserfindByNumAgeSilent() throws SQLException {
		UserFinder.findByNumAge(1).executeSilent();
	}

	@Test
	public void testUserfindByNumAgeLimitOffset() throws SQLException {
		UserFinder.findByNumAge(1)
				.withLimit(0)
				.withOffset(0)
				.execute();
	}

	@Test
	public void testUserfindByNumAgeLimitOffsetSilent() throws SQLException {
		UserFinder.findByNumAge(1)
				.withLimit(0)
				.withOffset(0)
				.executeSilent();

	}

	@Test
	public void testUserfindByNumAgeWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNumAge(1)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testUserfindByNumAgeWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNumAge(1)
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testUserfindByNumAgeWithNullConnection() throws SQLException {
		UserFinder.findByNumAge(1)
			.withConnection(null)
			.execute();
	}

	@Test
	public void testUserfindByNumAgeWithNullConnectionSilent() throws SQLException {
		UserFinder.findByNumAge(1)
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testUserfindByNumAgeWithNullConnectionLimitOffset() throws SQLException {
		UserFinder.findByNumAge(1)
			.withConnection(null)
			.withLimit(0)
			.withOffset(0)
			.execute();
	}

	@Test
	public void testUserfindByNumAgeWithNullConnectionLimitOffsetSilent() throws SQLException {
		UserFinder.findByNumAge(1)
				.withConnection(null)
				.withLimit(0)
				.withOffset(0)
				.executeSilent();
	}

	@Test
	public void testUserfindByNumAgeWithNullConnectionNullLimitNullOffset() throws SQLException {
		UserFinder.findByNumAge(1)
			.withConnection(null)
			.withLimit(null)
			.withOffset(null)
			.execute();
	}

	@Test
	public void testUserfindByNumAgeWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		UserFinder.findByNumAge(1)
				.withConnection(null)
				.withLimit(null)
				.withOffset(null)
				.executeSilent();
	}

	@Test
	public void testUserfindByFlIsAliveNumAge() throws SQLException {
		UserFinder.findByFlIsAliveNumAge(true, 1).execute();
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeSilent() throws SQLException {
		UserFinder.findByFlIsAliveNumAge(true, 1).executeSilent();
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeLimitOffset() throws SQLException {
		UserFinder.findByFlIsAliveNumAge(true, 1)
				.withLimit(0)
				.withOffset(0)
				.execute();
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeLimitOffsetSilent() throws SQLException {
		UserFinder.findByFlIsAliveNumAge(true, 1)
				.withLimit(0)
				.withOffset(0)
				.executeSilent();

	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByFlIsAliveNumAge(true, 1)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByFlIsAliveNumAge(true, 1)
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithNullConnection() throws SQLException {
		UserFinder.findByFlIsAliveNumAge(true, 1)
			.withConnection(null)
			.execute();
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithNullConnectionSilent() throws SQLException {
		UserFinder.findByFlIsAliveNumAge(true, 1)
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithNullConnectionLimitOffset() throws SQLException {
		UserFinder.findByFlIsAliveNumAge(true, 1)
			.withConnection(null)
			.withLimit(0)
			.withOffset(0)
			.execute();
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithNullConnectionLimitOffsetSilent() throws SQLException {
		UserFinder.findByFlIsAliveNumAge(true, 1)
				.withConnection(null)
				.withLimit(0)
				.withOffset(0)
				.executeSilent();
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithNullConnectionNullLimitNullOffset() throws SQLException {
		UserFinder.findByFlIsAliveNumAge(true, 1)
			.withConnection(null)
			.withLimit(null)
			.withOffset(null)
			.execute();
	}

	@Test
	public void testUserfindByFlIsAliveNumAgeWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		UserFinder.findByFlIsAliveNumAge(true, 1)
				.withConnection(null)
				.withLimit(null)
				.withOffset(null)
				.executeSilent();
	}

	@Test
	public void testUserfindByNmUsername() throws SQLException {
		UserFinder.findByNmUsername("varchar").execute();
	}

	@Test
	public void testUserfindByNmUsernameSilent() throws SQLException {
		UserFinder.findByNmUsername("varchar").executeSilent();
	}

	@Test
	public void testUserfindByNmUsernameWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNmUsername("varchar")
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testUserfindByNmUsernameWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNmUsername("varchar")
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testUserfindByNmUsernameWithNullConnection() throws SQLException {
		UserFinder.findByNmUsername("varchar")
			.withConnection(null)
			.execute();
	}

	@Test
	public void testUserfindByNmUsernameWithNullConnectionSilent() throws SQLException {
		UserFinder.findByNmUsername("varchar")
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testUserfindByTxtAddressEmail() throws SQLException {
		UserFinder.findByTxtAddressEmail("varchar").execute();
	}

	@Test
	public void testUserfindByTxtAddressEmailSilent() throws SQLException {
		UserFinder.findByTxtAddressEmail("varchar").executeSilent();
	}

	@Test
	public void testUserfindByTxtAddressEmailWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByTxtAddressEmail("varchar")
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testUserfindByTxtAddressEmailWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByTxtAddressEmail("varchar")
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testUserfindByTxtAddressEmailWithNullConnection() throws SQLException {
		UserFinder.findByTxtAddressEmail("varchar")
			.withConnection(null)
			.execute();
	}

	@Test
	public void testUserfindByTxtAddressEmailWithNullConnectionSilent() throws SQLException {
		UserFinder.findByTxtAddressEmail("varchar")
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPassword() throws SQLException {
		UserFinder.findByTxtAddressEmailTxtPassword("varchar", "varchar").execute();
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordSilent() throws SQLException {
		UserFinder.findByTxtAddressEmailTxtPassword("varchar", "varchar").executeSilent();
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByTxtAddressEmailTxtPassword("varchar", "varchar")
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByTxtAddressEmailTxtPassword("varchar", "varchar")
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordWithNullConnection() throws SQLException {
		UserFinder.findByTxtAddressEmailTxtPassword("varchar", "varchar")
			.withConnection(null)
			.execute();
	}

	@Test
	public void testUserfindByTxtAddressEmailTxtPasswordWithNullConnectionSilent() throws SQLException {
		UserFinder.findByTxtAddressEmailTxtPassword("varchar", "varchar")
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testUserfindNmUsernameDtmSignup() throws SQLException {
		UserFinder.findNmUsernameDtmSignup().execute();
	}

	@Test
	public void testUserfindNmUsernameDtmSignupSilent() throws SQLException {
		UserFinder.findNmUsernameDtmSignup().executeSilent();
	}

	@Test
	public void testUserfindNmUsernameDtmSignupLimitOffset() throws SQLException {
		UserFinder.findNmUsernameDtmSignup()
				.withLimit(0)
				.withOffset(0)
				.execute();
	}

	@Test
	public void testUserfindNmUsernameDtmSignupLimitOffsetSilent() throws SQLException {
		UserFinder.findNmUsernameDtmSignup()
				.withLimit(0)
				.withOffset(0)
				.executeSilent();

	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findNmUsernameDtmSignup()
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findNmUsernameDtmSignup()
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithNullConnection() throws SQLException {
		UserFinder.findNmUsernameDtmSignup()
			.withConnection(null)
			.execute();
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithNullConnectionSilent() throws SQLException {
		UserFinder.findNmUsernameDtmSignup()
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithNullConnectionLimitOffset() throws SQLException {
		UserFinder.findNmUsernameDtmSignup()
			.withConnection(null)
			.withLimit(0)
			.withOffset(0)
			.execute();
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithNullConnectionLimitOffsetSilent() throws SQLException {
		UserFinder.findNmUsernameDtmSignup()
				.withConnection(null)
				.withLimit(0)
				.withOffset(0)
				.executeSilent();
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithNullConnectionNullLimitNullOffset() throws SQLException {
		UserFinder.findNmUsernameDtmSignup()
			.withConnection(null)
			.withLimit(null)
			.withOffset(null)
			.execute();
	}

	@Test
	public void testUserfindNmUsernameDtmSignupWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		UserFinder.findNmUsernameDtmSignup()
				.withConnection(null)
				.withLimit(null)
				.withOffset(null)
				.executeSilent();
	}

	@Test
	public void testUserfindGroupNumAge() throws SQLException {
		UserFinder.findGroupNumAge().execute();
	}

	@Test
	public void testUserfindGroupNumAgeSilent() throws SQLException {
		UserFinder.findGroupNumAge().executeSilent();
	}

	@Test
	public void testUserfindGroupNumAgeLimitOffset() throws SQLException {
		UserFinder.findGroupNumAge()
				.withLimit(0)
				.withOffset(0)
				.execute();
	}

	@Test
	public void testUserfindGroupNumAgeLimitOffsetSilent() throws SQLException {
		UserFinder.findGroupNumAge()
				.withLimit(0)
				.withOffset(0)
				.executeSilent();

	}

	@Test
	public void testUserfindGroupNumAgeWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findGroupNumAge()
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testUserfindGroupNumAgeWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findGroupNumAge()
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testUserfindGroupNumAgeWithNullConnection() throws SQLException {
		UserFinder.findGroupNumAge()
			.withConnection(null)
			.execute();
	}

	@Test
	public void testUserfindGroupNumAgeWithNullConnectionSilent() throws SQLException {
		UserFinder.findGroupNumAge()
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testUserfindGroupNumAgeWithNullConnectionLimitOffset() throws SQLException {
		UserFinder.findGroupNumAge()
			.withConnection(null)
			.withLimit(0)
			.withOffset(0)
			.execute();
	}

	@Test
	public void testUserfindGroupNumAgeWithNullConnectionLimitOffsetSilent() throws SQLException {
		UserFinder.findGroupNumAge()
				.withConnection(null)
				.withLimit(0)
				.withOffset(0)
				.executeSilent();
	}

	@Test
	public void testUserfindGroupNumAgeWithNullConnectionNullLimitNullOffset() throws SQLException {
		UserFinder.findGroupNumAge()
			.withConnection(null)
			.withLimit(null)
			.withOffset(null)
			.execute();
	}

	@Test
	public void testUserfindGroupNumAgeWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		UserFinder.findGroupNumAge()
				.withConnection(null)
				.withLimit(null)
				.withOffset(null)
				.executeSilent();
	}

	@Test
	public void testUserfindByNumAgeIn() throws SQLException {
		UserFinder.findByNumAgeIn(List.of(1)).execute();
	}

	@Test
	public void testUserfindByNumAgeInSilent() throws SQLException {
		UserFinder.findByNumAgeIn(List.of(1)).executeSilent();
	}

	@Test
	public void testUserfindByNumAgeInLimitOffset() throws SQLException {
		UserFinder.findByNumAgeIn(List.of(1))
				.withLimit(0)
				.withOffset(0)
				.execute();
	}

	@Test
	public void testUserfindByNumAgeInLimitOffsetSilent() throws SQLException {
		UserFinder.findByNumAgeIn(List.of(1))
				.withLimit(0)
				.withOffset(0)
				.executeSilent();

	}

	@Test
	public void testUserfindByNumAgeInWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNumAgeIn(List.of(1))
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testUserfindByNumAgeInWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNumAgeIn(List.of(1))
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testUserfindByNumAgeInWithNullConnection() throws SQLException {
		UserFinder.findByNumAgeIn(List.of(1))
			.withConnection(null)
			.execute();
	}

	@Test
	public void testUserfindByNumAgeInWithNullConnectionSilent() throws SQLException {
		UserFinder.findByNumAgeIn(List.of(1))
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testUserfindByNumAgeInWithNullConnectionLimitOffset() throws SQLException {
		UserFinder.findByNumAgeIn(List.of(1))
			.withConnection(null)
			.withLimit(0)
			.withOffset(0)
			.execute();
	}

	@Test
	public void testUserfindByNumAgeInWithNullConnectionLimitOffsetSilent() throws SQLException {
		UserFinder.findByNumAgeIn(List.of(1))
				.withConnection(null)
				.withLimit(0)
				.withOffset(0)
				.executeSilent();
	}

	@Test
	public void testUserfindByNumAgeInWithNullConnectionNullLimitNullOffset() throws SQLException {
		UserFinder.findByNumAgeIn(List.of(1))
			.withConnection(null)
			.withLimit(null)
			.withOffset(null)
			.execute();
	}

	@Test
	public void testUserfindByNumAgeInWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		UserFinder.findByNumAgeIn(List.of(1))
				.withConnection(null)
				.withLimit(null)
				.withOffset(null)
				.executeSilent();
	}

	@Test
	public void testUserfindByNumAgeBetween() throws SQLException {
		UserFinder.findByNumAgeBetween(1, 1).execute();
	}

	@Test
	public void testUserfindByNumAgeBetweenSilent() throws SQLException {
		UserFinder.findByNumAgeBetween(1, 1).executeSilent();
	}

	@Test
	public void testUserfindByNumAgeBetweenLimitOffset() throws SQLException {
		UserFinder.findByNumAgeBetween(1, 1)
				.withLimit(0)
				.withOffset(0)
				.execute();
	}

	@Test
	public void testUserfindByNumAgeBetweenLimitOffsetSilent() throws SQLException {
		UserFinder.findByNumAgeBetween(1, 1)
				.withLimit(0)
				.withOffset(0)
				.executeSilent();

	}

	@Test
	public void testUserfindByNumAgeBetweenWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNumAgeBetween(1, 1)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testUserfindByNumAgeBetweenWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserFinder.findByNumAgeBetween(1, 1)
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testUserfindByNumAgeBetweenWithNullConnection() throws SQLException {
		UserFinder.findByNumAgeBetween(1, 1)
			.withConnection(null)
			.execute();
	}

	@Test
	public void testUserfindByNumAgeBetweenWithNullConnectionSilent() throws SQLException {
		UserFinder.findByNumAgeBetween(1, 1)
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testUserfindByNumAgeBetweenWithNullConnectionLimitOffset() throws SQLException {
		UserFinder.findByNumAgeBetween(1, 1)
			.withConnection(null)
			.withLimit(0)
			.withOffset(0)
			.execute();
	}

	@Test
	public void testUserfindByNumAgeBetweenWithNullConnectionLimitOffsetSilent() throws SQLException {
		UserFinder.findByNumAgeBetween(1, 1)
				.withConnection(null)
				.withLimit(0)
				.withOffset(0)
				.executeSilent();
	}

	@Test
	public void testUserfindByNumAgeBetweenWithNullConnectionNullLimitNullOffset() throws SQLException {
		UserFinder.findByNumAgeBetween(1, 1)
			.withConnection(null)
			.withLimit(null)
			.withOffset(null)
			.execute();
	}

	@Test
	public void testUserfindByNumAgeBetweenWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		UserFinder.findByNumAgeBetween(1, 1)
				.withConnection(null)
				.withLimit(null)
				.withOffset(null)
				.executeSilent();
	}

}
