package com.synapticloop.sample.h2zero.sqlite3.test.finder;

// - - - - thoughtfully generated by synapticloop h2zero - - - - 
//    with the use of synapticloop templar templating language
//            (java/test/java-finder-test.templar)


import static org.junit.Assert.*;

import org.junit.Assert;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import com.synapticloop.sample.h2zero.sqlite3.ConnectionManagerInitialiserOverride;
import com.synapticloop.h2zero.base.manager.sqlite3.ConnectionManager;
import com.synapticloop.sample.h2zero.sqlite3.test.DatabaseSetupTest;


import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.sql.*;
import java.util.List;


import com.synapticloop.sample.h2zero.sqlite3.finder.AllTypesFinder;

/**
 * WARNING NOTE: these tests are designed to test the generated SQL statements
 * __NOT__ whether the database actually returns sane results.
 * 
 * These will also test to ensure that connections are setting closed properly
 * so that there are no resource leakages.
 */

public class AllTypesTest extends DatabaseSetupTest {

	@Test
	public void testAllTypesFindByPrimaryKey() throws SQLException {
		AllTypesFinder.findByPrimaryKey(1L)
				.execute();

	}

	@Test
	public void testAllTypesFindByPrimaryKeySilent() throws SQLException {
		Assert.assertNull(AllTypesFinder.findByPrimaryKey(-831486134981L)
				.executeSilent());

	}

	@Test
	public void testAllTypesFindByPrimaryKeyWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByPrimaryKey(1L)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesFindByPrimaryKeyWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertNull(AllTypesFinder.findByPrimaryKey(-831486134981L)
				.withConnection(connection)
				.executeSilent());
		}
	}

	@Test
	public void testAllTypesFindAll() throws SQLException {
		Assert.assertEquals(0, AllTypesFinder.findAll()
				.execute()
				.size());

	}

	@Test
	public void testAllTypesFindAllLimitOffset() throws SQLException {
		Assert.assertEquals(0, AllTypesFinder.findAll()
			.withLimit(1)
			.withOffset(0)
			.execute()
			.size());
	}

	@Test
	public void testAllTypesFindAllSilent() throws SQLException {
		Assert.assertEquals(0, AllTypesFinder.findAll()
				.executeSilent()
				.size());

	}

	@Test
	public void testAllTypesFindAllLimitOffsetSilent() throws SQLException {
		Assert.assertEquals(0, AllTypesFinder.findAll()
				.withLimit(1)
				.withOffset(0)
				.executeSilent()
				.size());
	}

	@Test
	public void testAllTypesFindAllWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, AllTypesFinder.findAll()
				.withConnection(connection)
				.execute()
				.size());

		}
	}

	@Test
	public void testAllTypesFindAllWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, AllTypesFinder.findAll()
				.withConnection(connection)
				.executeSilent()
				.size());
		}
	}

	@Test
	public void testAllTypesFindAllWithConnectionLimit() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findAll().withConnection(connection)
				.withLimit(1)
				.withOffset(0)
				.execute();
		}

	}

	@Test
	public void testAllTypesFindAllWithConnectionLimitSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, AllTypesFinder.findAll()
				.withConnection(connection)
				.withLimit(1)
				.withOffset(0)
				.executeSilent()
				.size());
		}
	}

	@Test
	public void testAllTypesFindAllWithConnectionOffset() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findAll()
				.withConnection(connection)
				.withLimit(null)
				.withOffset(1)
				.execute();
			Assert.fail("A SQL Exception should have been thrown as there was an offset without a limit set.");		} catch(SQLException ignored) {
		}
	}

	@Test
	public void testAllTypesFindAllWithConnectionOffsetSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findAll()
				.withConnection(connection)
				.withLimit(null)
				.withOffset(0)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesFindAllWithConnectionLimitOffset() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findAll()
				.withConnection(connection)
				.withLimit(1)
				.withOffset(0)
				.execute();
		}
	}

	@Test
	public void testAllTypesFindAllWithNullConnectionLimitOffset() throws SQLException {
		AllTypesFinder.findAll()
				.withConnection(null)
				.withLimit(1)
				.withOffset(0)
				.execute();

	}

	@Test
	public void testAllTypesfindByIdAllTypes() throws SQLException {
		AllTypesFinder.findByIdAllTypes(1L).execute();
	}

	@Test
	public void testAllTypesfindByIdAllTypesSilent() throws SQLException {
		AllTypesFinder.findByIdAllTypes(1L).executeSilent();
	}

	@Test
	public void testAllTypesfindByIdAllTypesWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByIdAllTypes(1L)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByIdAllTypesWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByIdAllTypes(1L)
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByIdAllTypesWithNullConnection() throws SQLException {
		AllTypesFinder.findByIdAllTypes(1L)
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByIdAllTypesWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByIdAllTypes(1L)
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestBigint() throws SQLException {
		AllTypesFinder.findByTestBigint(1L).execute();
	}

	@Test
	public void testAllTypesfindByTestBigintSilent() throws SQLException {
		AllTypesFinder.findByTestBigint(1L).executeSilent();
	}

	@Test
	public void testAllTypesfindByTestBigintWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestBigint(1L)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestBigintWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestBigint(1L)
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestBigintWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestBigint(1L)
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestBigintWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestBigint(1L)
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestBoolean() throws SQLException {
		AllTypesFinder.findByTestBoolean(true).execute();
	}

	@Test
	public void testAllTypesfindByTestBooleanSilent() throws SQLException {
		AllTypesFinder.findByTestBoolean(true).executeSilent();
	}

	@Test
	public void testAllTypesfindByTestBooleanWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestBoolean(true)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestBooleanWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestBoolean(true)
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestBooleanWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestBoolean(true)
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestBooleanWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestBoolean(true)
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestDate() throws SQLException {
		AllTypesFinder.findByTestDate(new java.sql.Date(System.currentTimeMillis())).execute();
	}

	@Test
	public void testAllTypesfindByTestDateSilent() throws SQLException {
		AllTypesFinder.findByTestDate(new java.sql.Date(System.currentTimeMillis())).executeSilent();
	}

	@Test
	public void testAllTypesfindByTestDateWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestDate(new java.sql.Date(System.currentTimeMillis()))
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestDateWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestDate(new java.sql.Date(System.currentTimeMillis()))
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestDateWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestDate(new java.sql.Date(System.currentTimeMillis()))
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestDateWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestDate(new java.sql.Date(System.currentTimeMillis()))
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestDatetime() throws SQLException {
		AllTypesFinder.findByTestDatetime(new java.sql.Timestamp(System.currentTimeMillis())).execute();
	}

	@Test
	public void testAllTypesfindByTestDatetimeSilent() throws SQLException {
		AllTypesFinder.findByTestDatetime(new java.sql.Timestamp(System.currentTimeMillis())).executeSilent();
	}

	@Test
	public void testAllTypesfindByTestDatetimeWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestDatetime(new java.sql.Timestamp(System.currentTimeMillis()))
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestDatetimeWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestDatetime(new java.sql.Timestamp(System.currentTimeMillis()))
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestDatetimeWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestDatetime(new java.sql.Timestamp(System.currentTimeMillis()))
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestDatetimeWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestDatetime(new java.sql.Timestamp(System.currentTimeMillis()))
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestDouble() throws SQLException {
		AllTypesFinder.findByTestDouble(0.0).execute();
	}

	@Test
	public void testAllTypesfindByTestDoubleSilent() throws SQLException {
		AllTypesFinder.findByTestDouble(0.0).executeSilent();
	}

	@Test
	public void testAllTypesfindByTestDoubleWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestDouble(0.0)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestDoubleWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestDouble(0.0)
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestDoubleWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestDouble(0.0)
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestDoubleWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestDouble(0.0)
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestFloat() throws SQLException {
		AllTypesFinder.findByTestFloat(0.0f).execute();
	}

	@Test
	public void testAllTypesfindByTestFloatSilent() throws SQLException {
		AllTypesFinder.findByTestFloat(0.0f).executeSilent();
	}

	@Test
	public void testAllTypesfindByTestFloatWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestFloat(0.0f)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestFloatWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestFloat(0.0f)
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestFloatWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestFloat(0.0f)
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestFloatWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestFloat(0.0f)
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestInt() throws SQLException {
		AllTypesFinder.findByTestInt(1).execute();
	}

	@Test
	public void testAllTypesfindByTestIntSilent() throws SQLException {
		AllTypesFinder.findByTestInt(1).executeSilent();
	}

	@Test
	public void testAllTypesfindByTestIntWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestInt(1)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestIntWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestInt(1)
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestIntWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestInt(1)
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestIntWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestInt(1)
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestInteger() throws SQLException {
		AllTypesFinder.findByTestInteger(1).execute();
	}

	@Test
	public void testAllTypesfindByTestIntegerSilent() throws SQLException {
		AllTypesFinder.findByTestInteger(1).executeSilent();
	}

	@Test
	public void testAllTypesfindByTestIntegerWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestInteger(1)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestIntegerWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestInteger(1)
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestIntegerWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestInteger(1)
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestIntegerWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestInteger(1)
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestMediumint() throws SQLException {
		AllTypesFinder.findByTestMediumint(1).execute();
	}

	@Test
	public void testAllTypesfindByTestMediumintSilent() throws SQLException {
		AllTypesFinder.findByTestMediumint(1).executeSilent();
	}

	@Test
	public void testAllTypesfindByTestMediumintWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestMediumint(1)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestMediumintWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestMediumint(1)
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestMediumintWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestMediumint(1)
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestMediumintWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestMediumint(1)
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestNumeric() throws SQLException {
		AllTypesFinder.findByTestNumeric(new java.math.BigDecimal("0.0")).execute();
	}

	@Test
	public void testAllTypesfindByTestNumericSilent() throws SQLException {
		AllTypesFinder.findByTestNumeric(new java.math.BigDecimal("0.0")).executeSilent();
	}

	@Test
	public void testAllTypesfindByTestNumericWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestNumeric(new java.math.BigDecimal("0.0"))
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestNumericWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestNumeric(new java.math.BigDecimal("0.0"))
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestNumericWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestNumeric(new java.math.BigDecimal("0.0"))
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestNumericWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestNumeric(new java.math.BigDecimal("0.0"))
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestSmallint() throws SQLException {
		AllTypesFinder.findByTestSmallint((short) 0).execute();
	}

	@Test
	public void testAllTypesfindByTestSmallintSilent() throws SQLException {
		AllTypesFinder.findByTestSmallint((short) 0).executeSilent();
	}

	@Test
	public void testAllTypesfindByTestSmallintWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestSmallint((short) 0)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestSmallintWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestSmallint((short) 0)
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestSmallintWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestSmallint((short) 0)
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestSmallintWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestSmallint((short) 0)
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestText() throws SQLException {
		AllTypesFinder.findByTestText("text").execute();
	}

	@Test
	public void testAllTypesfindByTestTextSilent() throws SQLException {
		AllTypesFinder.findByTestText("text").executeSilent();
	}

	@Test
	public void testAllTypesfindByTestTextWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestText("text")
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestTextWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestText("text")
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestTextWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestText("text")
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestTextWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestText("text")
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestTinyint() throws SQLException {
		AllTypesFinder.findByTestTinyint(true).execute();
	}

	@Test
	public void testAllTypesfindByTestTinyintSilent() throws SQLException {
		AllTypesFinder.findByTestTinyint(true).executeSilent();
	}

	@Test
	public void testAllTypesfindByTestTinyintWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestTinyint(true)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestTinyintWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestTinyint(true)
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestTinyintWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestTinyint(true)
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestTinyintWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestTinyint(true)
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testAllTypesfindByTestVarchar() throws SQLException {
		AllTypesFinder.findByTestVarchar("varchar").execute();
	}

	@Test
	public void testAllTypesfindByTestVarcharSilent() throws SQLException {
		AllTypesFinder.findByTestVarchar("varchar").executeSilent();
	}

	@Test
	public void testAllTypesfindByTestVarcharWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestVarchar("varchar")
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testAllTypesfindByTestVarcharWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			AllTypesFinder.findByTestVarchar("varchar")
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testAllTypesfindByTestVarcharWithNullConnection() throws SQLException {
		AllTypesFinder.findByTestVarchar("varchar")
			.withConnection(null)
			.execute();
	}

	@Test
	public void testAllTypesfindByTestVarcharWithNullConnectionSilent() throws SQLException {
		AllTypesFinder.findByTestVarchar("varchar")
				.withConnection(null)
				.executeSilent();
	}

}
