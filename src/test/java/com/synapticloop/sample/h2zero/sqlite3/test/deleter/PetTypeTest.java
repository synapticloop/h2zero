package com.synapticloop.sample.h2zero.sqlite3.test.deleter;

//        - - - - thoughtfully generated by synapticloop h2zero - - - -        
//          with the use of synapticloop templar templating language
//                    (/java/test/java-deleter-test.templar)


import static org.junit.Assert.*;

import org.junit.Assert;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import com.synapticloop.sample.h2zero.sqlite3.ConnectionManagerInitialiserOverride;
import com.synapticloop.h2zero.base.exception.H2ZeroFinderException;
import com.synapticloop.h2zero.base.manager.sqlite3.ConnectionManager;
import com.synapticloop.sample.h2zero.sqlite3.test.DatabaseSetupTest;


import java.math.*;
import java.sql.Connection;
import java.sql.SQLException;
import java.sql.*;
import java.util.ArrayList;
import java.util.List;


import com.synapticloop.sample.h2zero.sqlite3.deleter.PetTypeDeleter;

/**
 * WARNING NOTE: these tests are designed to test the generated SQL statements
 * __NOT__ whether the database actually returns sane results.
 */

public class PetTypeTest extends DatabaseSetupTest {

	@Test
	public void testPetTypeDeleteByPrimaryKey() throws SQLException {
		Assert.assertEquals(0, PetTypeDeleter.deleteByPrimaryKey(1L).execute());
	}

	@Test
	public void testPetTypeDeleteByPrimaryKeySilent() throws SQLException {
		Assert.assertEquals(0, PetTypeDeleter.deleteByPrimaryKey(1L).executeSilent());
	}

	@Test
	public void testPetTypeDeleteByPrimaryKeyWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, PetTypeDeleter.deleteByPrimaryKey(1L).withConnection(connection).execute());
		}
	}

	@Test
	public void testPetTypeDeleteByPrimaryKeyWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, PetTypeDeleter.deleteByPrimaryKey(1L).withConnection(connection).executeSilent());
		}
	}

	@Test
	public void testPetTypeDeleteAll() throws SQLException {
		Assert.assertEquals(0, PetTypeDeleter.deleteAll().execute());
	}

	@Test
	public void testPetTypeDeleteAllSilent() throws SQLException {
		Assert.assertEquals(0, PetTypeDeleter.deleteAll().executeSilent());
	}

	@Test
	public void testPetTypeDeleteAllWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, PetTypeDeleter.deleteAll().withConnection(connection).execute());
		}
	}

	@Test
	public void testPetTypeDeleteAllWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(0, PetTypeDeleter.deleteAll().withConnection(connection).executeSilent());
		}
	}

}
