package com.synapticloop.sample.h2zero.mariadb.upserter;

// - - - - thoughtfully generated by synapticloop h2zero - - - - 
//    with the use of synapticloop templar templating language
//                (java-create-upserter.templar)

import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Date;
import java.sql.Blob;
import java.sql.Timestamp;
import java.sql.Time;
import java.math.BigDecimal;
import java.util.List;
import java.util.ArrayList;

import com.synapticloop.h2zero.base.exception.H2ZeroFinderException;
import com.synapticloop.h2zero.base.manager.mariadb.ConnectionManager;
import com.synapticloop.h2zero.util.LruCache;


import org.slf4j.Logger;
import org.slf4j.LoggerFactory;


import com.synapticloop.sample.h2zero.mariadb.model.util.Constants;

import com.synapticloop.sample.h2zero.mariadb.model.AllTypes;

public class AllTypesUpserter {
	// the binder is unused in code, but will generate compile problems if this 
	// class is no longer referenced in the h2zero file. Just a nicety for
	// removing dead code
	@SuppressWarnings("unused")
	private static final String BINDER = Constants.ALL_TYPES_BINDER;

	private static final Logger LOGGER = LoggerFactory.getLogger(AllTypesUpserter.class);
	private static final String SQL_SELECT_START = 
		"""
			select 
				id_all_types, 
				test_bigint, 
				test_blob, 
				test_bool, 
				test_char, 
				test_boolean, 
				test_binary, 
				test_varbinary, 
				test_date, 
				test_datetime, 
				test_dec, 
				test_decimal, 
				test_double, 
				test_float, 
				test_int, 
				test_integer, 
				test_longtext, 
				test_mediumblob, 
				test_mediumint, 
				test_mediumtext, 
				test_numeric, 
				test_smallint, 
				test_time, 
				test_text, 
				test_timestamp, 
				test_tinyint, 
				test_tinytext, 
				test_varchar, 
				test_year
			from 
				all_types
		""";
	private static final String SQL_BUILTIN_FIND_BY_PRIMARY_KEY = SQL_SELECT_START + " where id_all_types = ?";

	private static final String SQL_FIND_BY_ID_ALL_TYPES = SQL_SELECT_START + 
		"""
			where id_all_types = ?
		""";
	private static final String SQL_FIND_BY_TEST_BIGINT = SQL_SELECT_START + 
		"""
			where test_bigint = ?
		""";
	private static final String SQL_FIND_BY_TEST_BOOL = SQL_SELECT_START + 
		"""
			where test_bool = ?
		""";
	private static final String SQL_FIND_BY_TEST_CHAR = SQL_SELECT_START + 
		"""
			where test_char = ?
		""";
	private static final String SQL_FIND_BY_TEST_BOOLEAN = SQL_SELECT_START + 
		"""
			where test_boolean = ?
		""";
	private static final String SQL_FIND_BY_TEST_DATE = SQL_SELECT_START + 
		"""
			where test_date = ?
		""";
	private static final String SQL_FIND_BY_TEST_DATETIME = SQL_SELECT_START + 
		"""
			where test_datetime = ?
		""";
	private static final String SQL_FIND_BY_TEST_DEC = SQL_SELECT_START + 
		"""
			where test_dec = ?
		""";
	private static final String SQL_FIND_BY_TEST_DECIMAL = SQL_SELECT_START + 
		"""
			where test_decimal = ?
		""";
	private static final String SQL_FIND_BY_TEST_DOUBLE = SQL_SELECT_START + 
		"""
			where test_double = ?
		""";
	private static final String SQL_FIND_BY_TEST_FLOAT = SQL_SELECT_START + 
		"""
			where test_float = ?
		""";
	private static final String SQL_FIND_BY_TEST_INT = SQL_SELECT_START + 
		"""
			where test_int = ?
		""";
	private static final String SQL_FIND_BY_TEST_INTEGER = SQL_SELECT_START + 
		"""
			where test_integer = ?
		""";
	private static final String SQL_FIND_BY_TEST_LONGTEXT = SQL_SELECT_START + 
		"""
			where test_longtext = ?
		""";
	private static final String SQL_FIND_BY_TEST_MEDIUMINT = SQL_SELECT_START + 
		"""
			where test_mediumint = ?
		""";
	private static final String SQL_FIND_BY_TEST_MEDIUMTEXT = SQL_SELECT_START + 
		"""
			where test_mediumtext = ?
		""";
	private static final String SQL_FIND_BY_TEST_NUMERIC = SQL_SELECT_START + 
		"""
			where test_numeric = ?
		""";
	private static final String SQL_FIND_BY_TEST_SMALLINT = SQL_SELECT_START + 
		"""
			where test_smallint = ?
		""";
	private static final String SQL_FIND_BY_TEST_TIME = SQL_SELECT_START + 
		"""
			where test_time = ?
		""";
	private static final String SQL_FIND_BY_TEST_TEXT = SQL_SELECT_START + 
		"""
			where test_text = ?
		""";
	private static final String SQL_FIND_BY_TEST_TIMESTAMP = SQL_SELECT_START + 
		"""
			where test_timestamp = ?
		""";
	private static final String SQL_FIND_BY_TEST_TINYINT = SQL_SELECT_START + 
		"""
			where test_tinyint = ?
		""";
	private static final String SQL_FIND_BY_TEST_TINYTEXT = SQL_SELECT_START + 
		"""
			where test_tinytext = ?
		""";
	private static final String SQL_FIND_BY_TEST_VARCHAR = SQL_SELECT_START + 
		"""
			where test_varchar = ?
		""";
	private static final String SQL_FIND_BY_TEST_YEAR = SQL_SELECT_START + 
		"""
			where test_year = ?
		""";

	private AllTypesUpserter() {}

}