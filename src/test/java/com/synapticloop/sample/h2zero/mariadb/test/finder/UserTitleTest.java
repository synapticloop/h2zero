package com.synapticloop.sample.h2zero.mariadb.test.finder;

// - - - - thoughtfully generated by synapticloop h2zero - - - - 
//    with the use of synapticloop templar templating language
//            (java/test/java-finder-test.templar)


import static org.junit.Assert.*;

import org.junit.Assert;
import org.junit.AfterClass;
import org.junit.BeforeClass;
import org.junit.Test;
import com.synapticloop.sample.h2zero.mariadb.ConnectionManagerInitialiserOverride;
import com.synapticloop.h2zero.base.manager.mariadb.ConnectionManager;
import com.synapticloop.sample.h2zero.mariadb.test.DatabaseSetupTest;


import java.sql.Connection;
import java.sql.SQLException;
import java.util.ArrayList;
import java.sql.*;
import java.util.List;


import com.synapticloop.sample.h2zero.mariadb.finder.UserTitleFinder;

/**
 * WARNING NOTE: these tests are designed to test the generated SQL statements
 * __NOT__ whether the database actually returns sane results.
 * 
 * These will also test to ensure that connections are setting closed properly
 * so that there are no resource leakages.
 */

public class UserTitleTest extends DatabaseSetupTest {

	@Test
	public void testUserTitleFindByPrimaryKey() throws SQLException {
		UserTitleFinder.findByPrimaryKey(1L)
				.execute();

	}

	@Test
	public void testUserTitleFindByPrimaryKeySilent() throws SQLException {
		Assert.assertNull(UserTitleFinder.findByPrimaryKey(-831486134981L)
				.executeSilent());

	}

	@Test
	public void testUserTitleFindByPrimaryKeyWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserTitleFinder.findByPrimaryKey(1L)
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testUserTitleFindByPrimaryKeyWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertNull(UserTitleFinder.findByPrimaryKey(-831486134981L)
				.withConnection(connection)
				.executeSilent());
		}
	}

	@Test
	public void testUserTitleFindAll() throws SQLException {
		Assert.assertEquals(4, UserTitleFinder.findAll()
				.execute()
				.size());

	}

	@Test
	public void testUserTitleFindAllLimitOffset() throws SQLException {
		Assert.assertEquals(1, UserTitleFinder.findAll()
			.withLimit(1)
			.withOffset(0)
			.execute()
			.size());
	}

	@Test
	public void testUserTitleFindAllSilent() throws SQLException {
		Assert.assertEquals(4, UserTitleFinder.findAll()
				.executeSilent()
				.size());

	}

	@Test
	public void testUserTitleFindAllLimitOffsetSilent() throws SQLException {
		Assert.assertEquals(1, UserTitleFinder.findAll()
				.withLimit(1)
				.withOffset(0)
				.executeSilent()
				.size());
	}

	@Test
	public void testUserTitleFindAllWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, UserTitleFinder.findAll()
				.withConnection(connection)
				.execute()
				.size());

		}
	}

	@Test
	public void testUserTitleFindAllWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, UserTitleFinder.findAll()
				.withConnection(connection)
				.executeSilent()
				.size());
		}
	}

	@Test
	public void testUserTitleFindAllWithConnectionLimit() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(1, UserTitleFinder.findAll()
				.withConnection(connection)
				.withLimit(1)
				.withOffset(0)
				.execute()
				.size());
		}

	}

	@Test
	public void testUserTitleFindAllWithConnectionLimitSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(1, UserTitleFinder.findAll()
				.withConnection(connection)
				.withLimit(1)
				.withOffset(0)
				.executeSilent()
				.size());
		}
	}

	@Test
	public void testUserTitleFindAllWithConnectionOffset() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(4, UserTitleFinder.findAll()
				.withConnection(connection)
				.withLimit(null)
				.withOffset(1)
				.execute()
				.size());
			Assert.fail("A SQL Exception should have been thrown as there was an offset without a limit set.");		} catch(SQLException ignored) {
		}
	}

	@Test
	public void testUserTitleFindAllWithConnectionOffsetSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserTitleFinder.findAll()
				.withConnection(connection)
				.withLimit(null)
				.withOffset(0)
				.executeSilent();
		}
	}

	@Test
	public void testUserTitleFindAllWithConnectionLimitOffset() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			Assert.assertEquals(1, UserTitleFinder.findAll()
				.withConnection(connection)
				.withLimit(1)
				.withOffset(0)
				.execute()
				.size());
		}
	}

	@Test
	public void testUserTitleFindAllWithNullConnectionLimitOffset() throws SQLException {
		Assert.assertEquals(1, UserTitleFinder.findAll()
				.withConnection(null)
				.withLimit(1)
				.withOffset(0)
				.execute()
				.size());

	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrdered() throws SQLException {
		UserTitleFinder.findIdUserTitleNmUserTitleOrdered().execute();
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedSilent() throws SQLException {
		UserTitleFinder.findIdUserTitleNmUserTitleOrdered().executeSilent();
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedLimitOffset() throws SQLException {
		UserTitleFinder.findIdUserTitleNmUserTitleOrdered()
				.withLimit(0)
				.withOffset(0)
				.execute();
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedLimitOffsetSilent() throws SQLException {
		UserTitleFinder.findIdUserTitleNmUserTitleOrdered()
				.withLimit(0)
				.withOffset(0)
				.executeSilent();

	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserTitleFinder.findIdUserTitleNmUserTitleOrdered()
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserTitleFinder.findIdUserTitleNmUserTitleOrdered()
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithNullConnection() throws SQLException {
		UserTitleFinder.findIdUserTitleNmUserTitleOrdered()
			.withConnection(null)
			.execute();
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithNullConnectionSilent() throws SQLException {
		UserTitleFinder.findIdUserTitleNmUserTitleOrdered()
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithNullConnectionLimitOffset() throws SQLException {
		UserTitleFinder.findIdUserTitleNmUserTitleOrdered()
			.withConnection(null)
			.withLimit(0)
			.withOffset(0)
			.execute();
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithNullConnectionLimitOffsetSilent() throws SQLException {
		UserTitleFinder.findIdUserTitleNmUserTitleOrdered()
				.withConnection(null)
				.withLimit(0)
				.withOffset(0)
				.executeSilent();
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithNullConnectionNullLimitNullOffset() throws SQLException {
		UserTitleFinder.findIdUserTitleNmUserTitleOrdered()
			.withConnection(null)
			.withLimit(null)
			.withOffset(null)
			.execute();
	}

	@Test
	public void testUserTitlefindIdUserTitleNmUserTitleOrderedWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		UserTitleFinder.findIdUserTitleNmUserTitleOrdered()
				.withConnection(null)
				.withLimit(null)
				.withOffset(null)
				.executeSilent();
	}

	@Test
	public void testUserTitlefindAllOrdered() throws SQLException {
		UserTitleFinder.findAllOrdered().execute();
	}

	@Test
	public void testUserTitlefindAllOrderedSilent() throws SQLException {
		UserTitleFinder.findAllOrdered().executeSilent();
	}

	@Test
	public void testUserTitlefindAllOrderedLimitOffset() throws SQLException {
		UserTitleFinder.findAllOrdered()
				.withLimit(0)
				.withOffset(0)
				.execute();
	}

	@Test
	public void testUserTitlefindAllOrderedLimitOffsetSilent() throws SQLException {
		UserTitleFinder.findAllOrdered()
				.withLimit(0)
				.withOffset(0)
				.executeSilent();

	}

	@Test
	public void testUserTitlefindAllOrderedWithConnection() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserTitleFinder.findAllOrdered()
				.withConnection(connection)
				.execute();
		}
	}

	@Test
	public void testUserTitlefindAllOrderedWithConnectionSilent() throws SQLException {
		try (Connection connection = ConnectionManager.getConnection()) {
			UserTitleFinder.findAllOrdered()
				.withConnection(connection)
				.executeSilent();
		}
	}

	@Test
	public void testUserTitlefindAllOrderedWithNullConnection() throws SQLException {
		UserTitleFinder.findAllOrdered()
			.withConnection(null)
			.execute();
	}

	@Test
	public void testUserTitlefindAllOrderedWithNullConnectionSilent() throws SQLException {
		UserTitleFinder.findAllOrdered()
				.withConnection(null)
				.executeSilent();
	}

	@Test
	public void testUserTitlefindAllOrderedWithNullConnectionLimitOffset() throws SQLException {
		UserTitleFinder.findAllOrdered()
			.withConnection(null)
			.withLimit(0)
			.withOffset(0)
			.execute();
	}

	@Test
	public void testUserTitlefindAllOrderedWithNullConnectionLimitOffsetSilent() throws SQLException {
		UserTitleFinder.findAllOrdered()
				.withConnection(null)
				.withLimit(0)
				.withOffset(0)
				.executeSilent();
	}

	@Test
	public void testUserTitlefindAllOrderedWithNullConnectionNullLimitNullOffset() throws SQLException {
		UserTitleFinder.findAllOrdered()
			.withConnection(null)
			.withLimit(null)
			.withOffset(null)
			.execute();
	}

	@Test
	public void testUserTitlefindAllOrderedWithNullConnectionNullLimitNullOffsetSilent() throws SQLException {
		UserTitleFinder.findAllOrdered()
				.withConnection(null)
				.withLimit(null)
				.withOffset(null)
				.executeSilent();
	}

}
