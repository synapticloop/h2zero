{-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		PACKAGE DECLARATION, IMPORT STATEMENTS AND CLASS DEFINITION
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --}

package {database.package}.form;{\n}{\n}

//        - - - - thoughtfully generated by synapticloop h2zero - - - -        {\n}
//          with the use of synapticloop templar templating language{\n}
//              (/java/model/java-create-model-form-bean.templar){\n}{\n}
{\n}

import java.util.LinkedHashMap;{\n}

import com.synapticloop.h2zero.base.form.FormBean;{\n}
import com.synapticloop.h2zero.base.form.field.*;{\n}

{\n}

public class {table.javaClassName}ModelFormBean extends FormBean {{{\n}
{loop table.fields as field}
	{\t}public static final String FIELD_{field.upperName} = "{field.javaName}";{\n}
{endloop}
{\n}

{\t}private static final LinkedHashMap<String, BaseFormField> DEFAULT_FIELDMAP = new LinkedHashMap<String, BaseFormField>();{\n}

{\t}static {{{\n}

{loop table.fields as field}
	{\t}{\t}DEFAULT_FIELDMAP.put(FIELD_{field.upperName}, new {field.validator}(FIELD_{field.upperName}, {field.nullable}, false, {field.minLength}, {field.maxLength}));{\n}
{endloop}

{\t}}{\n}
{\n}

{\t}public {table.javaClassName}ModelFormBean() {{{\n}
{\t}{\t}super(new LinkedHashMap<String, BaseFormField>(DEFAULT_FIELDMAP));{\n}
{\t}}{\n}
{\n}

{\t}// vanilla getters for field values{\n}
{loop table.fields as field}
	{\t}public String get{field.javaAccessorName}Value(){{ return(getFieldValue(FIELD_{field.upperName})); }{\n}
{endloop}
{\n}
{\t}// vanilla getters for fields in error{\n}
{loop table.fields as field}
	{\t}public boolean getIs{field.javaAccessorName}InError(){{ return(getIsFieldInError(FIELD_{field.upperName})); }{\n}
{endloop}
{\n}

}