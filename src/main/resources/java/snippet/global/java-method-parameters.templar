{--
 This is used to iterate the parameters that are passed to the baseQueryObject 
 function.
 
 It checks whether the baseQueryObject has an alias, and if so, goes through all of the
 where fields, not just the unique ones.
 --}
{set fn:length[baseQueryObject.uniqueWhereFields] as whereFieldsLength}
{set fn:length[baseQueryObject.updateFields] as updateFieldsLength}

{loop baseQueryObject.updateFields as setField}
	{if !setFieldStatus.first}, {endif}{if setField.isInField}List<{setField.javaType}>{else}{setField.javaType}{endif} {setField.javaName}{if setField.isInField}List{endif}
{endloop}

{if baseQueryObject.hasWhereFieldAliases}
	{loop baseQueryObject.whereFields as whereField}
		{if whereFieldStatus.first}
			{if fn:notEqual[updateFieldsLength, "0"]}, {endif}
		{endif}
		{if !whereFieldStatus.first}, {endif}{if whereField.isInField}List<{whereField.javaType}>{else}{whereField.javaType}{endif} {whereField.javaName}{if whereField.isInField}List{endif}
	{endloop}
{else}
	{loop baseQueryObject.uniqueWhereFields as whereField}
		{if whereFieldStatus.first}
			{if fn:notEqual[updateFieldsLength, "0"]}, {endif}
		{endif}
		{if !whereFieldStatus.first}, {endif}{if whereField.isInField}List<{whereField.javaType}>{else}{whereField.javaType}{endif} {whereField.javaName}{if whereField.isInField}List{endif}
	{endloop}
{endif}
