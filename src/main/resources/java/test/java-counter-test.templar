package {database.package}.test.counter;{\n}{\n}

//        - - - - thoughtfully generated by synapticloop h2zero - - - -        {\n}
//          with the use of synapticloop templar templating language{\n}
//                     (java/test/java-counter-test.templar){\n}{\n}
{\n}
import static org.junit.Assert.*;{\n}
{\n}
import org.junit.Assert;{\n}
import org.junit.AfterClass;{\n}
import org.junit.BeforeClass;{\n}
import org.junit.Test;{\n}
import {database.package}.ConnectionManagerInitialiserOverride;{\n}
import com.synapticloop.h2zero.base.manager.{options.database}.ConnectionManager;{\n}
import {database.package}.test.DatabaseSetupTest;{\n}{\n}
{\n}
import java.math.*;{\n}
import java.sql.Connection;{\n}
import java.sql.SQLException;{\n}
import java.util.ArrayList;{\n}
import java.sql.*;{\n}
import java.util.List;{\n}
{\n}
{\n}
import {database.package}.counter.{table.javaClassName}Counter;{\n}
{\n}
/**{\n}
 * <p><strong>WARNING NOTE:</strong> these tests are designed to test the generated SQL statements{\n}
 * <strong>__NOT__<strong> whether the database actually returns sane results.<p>{\n}
 */{\n}
{\n}
public class {table.javaClassName}Test extends DatabaseSetupTest {{{\n}
{\n}

{\t}@Test{\n}
{\t}public void test{table.javaClassName}countAll() throws SQLException {{{\n}
{\t}{\t}{table.javaClassName}Counter.countAll(){\n}
{\t}{\t}{\t}{\t}.execute();{\n}
{\t}}{\n}
{\n}

{\t}@Test{\n}
{\t}public void test{table.javaClassName}countAllSilent() {{{\n}
{\t}{\t}{table.javaClassName}Counter.countAll(){\n}
{\t}{\t}{\t}{\t}.executeSilent();{\n}
{\t}}{\n}
{\n}

{\t}@Test{\n}
{\t}public void test{table.javaClassName}countAllWithConnection() throws SQLException {{{\n}
{\t}{\t}try (Connection connection = ConnectionManager.getConnection()) {{{\n}
{\t}{\t}{\t}{table.javaClassName}Counter.countAll(){\n}
{\t}{\t}{\t}{\t}{\t}.withConnection(connection){\n}
{\t}{\t}{\t}{\t}{\t}.execute();{\n}
{\t}{\t}}{\n}
{\t}}{\n}
{\n}

{\t}@Test{\n}
{\t}public void test{table.javaClassName}countAllWithConnectionSilent() throws SQLException {{{\n}
{\t}{\t}try (Connection connection = ConnectionManager.getConnection()) {{{\n}
{\t}{\t}{\t}{table.javaClassName}Counter.countAll(){\n}
{\t}{\t}{\t}{\t}{\t}.withConnection(connection){\n}
{\t}{\t}{\t}{\t}{\t}.executeSilent();{\n}
{\t}{\t}}{\n}
{\t}}{\n}
{\n}

{\t}@Test{\n}
{\t}public void test{table.javaClassName}countAllWithNullConnection() throws SQLException {{{\n}
{\t}{\t}{table.javaClassName}Counter.countAll(){\n}
{\t}{\t}{\t}{\t}.withConnection(null){\n}
{\t}{\t}{\t}{\t}.execute();{\n}
{\t}}{\n}
{\n}

{\t}@Test{\n}
{\t}public void test{table.javaClassName}countAllWithNullConnectionSilent() {{{\n}
{\t}{\t}{table.javaClassName}Counter.countAll(){\n}
{\t}{\t}{\t}{\t}.withConnection(null){\n}
{\t}{\t}{\t}{\t}.executeSilent();{\n}
{\t}}{\n}
{\n}



{loop table.counters as counter}
	{set counter as baseQueryObject}
{\t}@Test{\n}
{\t}public void test{table.javaClassName}{counter.name}() throws SQLException {{{\n}
{\t}{\t}{table.javaClassName}Counter.{counter.name}({import classpath:/java/test/snippet/counter-field-params.templar}){\n}
{\t}{\t}{\t}{\t}.execute();{\n}
{\t}}{\n}
{\n}

{\t}@Test{\n}
{\t}public void test{table.javaClassName}{counter.name}Silent() {{{\n}
{\t}{\t}{table.javaClassName}Counter.{counter.name}({import classpath:/java/test/snippet/counter-field-params.templar}){\n}
{\t}{\t}{\t}{\t}.executeSilent();{\n}
{\t}}{\n}
{\n}

{\t}@Test{\n}
{\t}public void test{table.javaClassName}{counter.name}WithConnection() throws SQLException {{{\n}
{\t}{\t}try (Connection connection = ConnectionManager.getConnection()) {{{\n}
{\t}{\t}{\t}{table.javaClassName}Counter.{counter.name}({import classpath:/java/test/snippet/counter-field-params.templar}){\n}
{\t}{\t}{\t}{\t}{\t}.withConnection(connection){\n}
{\t}{\t}{\t}{\t}{\t}.execute();{\n}
{\t}{\t}}{\n}
{\t}}{\n}
{\n}

{\t}@Test{\n}
{\t}public void test{table.javaClassName}{counter.name}WithConnectionSilent() throws SQLException {{{\n}
{\t}{\t}try (Connection connection = ConnectionManager.getConnection()) {{{\n}
{\t}{\t}{\t}{table.javaClassName}Counter.{counter.name}({import classpath:/java/test/snippet/counter-field-params.templar}){\n}
{\t}{\t}{\t}{\t}{\t}.withConnection(connection){\n}
{\t}{\t}{\t}{\t}{\t}.executeSilent();{\n}
{\t}{\t}}{\n}
{\t}}{\n}
{\n}


{\t}@Test{\n}
{\t}public void test{table.javaClassName}{counter.name}WithNullConnection() throws SQLException {{{\n}
{\t}{\t}{\t}{table.javaClassName}Counter.{counter.name}({import classpath:/java/test/snippet/counter-field-params.templar}){\n}
{\t}{\t}{\t}{\t}.withConnection(null){\n}
{\t}{\t}{\t}{\t}.execute();{\n}
{\t}}{\n}
{\n}

{\t}@Test{\n}
{\t}public void test{table.javaClassName}{counter.name}WithNullConnectionSilent() {{{\n}
{\t}{\t}{table.javaClassName}Counter.{counter.name}({import classpath:/java/test/snippet/counter-field-params.templar}){\n}
{\t}{\t}{\t}{\t}.withConnection(null){\n}
{\t}{\t}{\t}{\t}.executeSilent();{\n}
{\t}}{\n}
{\n}

{endloop}
}{\n}