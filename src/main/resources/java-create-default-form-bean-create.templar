{-- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
		PACKAGE DECLARATION, IMPORT STATEMENTS AND CLASS DEFINITION
 - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - --}

package {database.package}.form.auto;{\n}{\n}

//- - - - thoughtfully generated by synapticloop h2zero - - - - {\n}
//  with the use of synapticloop templar templating language{\n}
//        (java-create-default-form-bean.templar){\n}{\n}
{\n}

import java.util.LinkedHashMap;{\n}

import com.synapticloop.h2zero.base.form.FormBean;{\n}
import com.synapticloop.h2zero.base.form.field.*;{\n}
{\n}

import {database.package}.finder.{table.javaClassName}Finder;{\n}
{loop table.fields as field}
	{if fn:notNull[field.foreignKeyTable]}
		import {database.package}.finder.{field.foreignKeyTableLookup.javaClassName}Finder;{\n}
	{endif}
{endloop}
{\n}

public class {table.javaClassName}CreateFormBean extends FormBean {{{\n}
{\t}private static final LinkedHashMap<String, BaseFormField> DEFAULT_FIELDMAP = new LinkedHashMap<String, BaseFormField>();{\n}
{\t}static {{{\n}

{loop table.fields as field}
	{if !field.primary}
		{if !field.populate}
			{\t}{\t}DEFAULT_FIELDMAP.put("{field.name}", new {field.formField}("{field.name}", {field.nullable}, false, {field.minLength}, {field.maxLength}));{\n}
		{endif}
	{endif}
{endloop}

{\t}}{\n}
{\n}
{loop table.fields as field}
	{\t}public static final String FIELD_{field.upperName} = "{field.name}";{\n}
{endloop}
{\n}

{\t}public {table.javaClassName}CreateFormBean() {{{\n}
{\t}{\t}super(new LinkedHashMap<String, BaseFormField>(DEFAULT_FIELDMAP));{\n}
{\t}}{\n}
{\n}

{\t}// vanilla getters for field values{\n}
{loop table.fields as field}
	{\t}public String get{field.javaAccessorName}Value(){{ return(getFieldValue(FIELD_{field.upperName})); }{\n}
{endloop}
{\n}
{\t}// vanilla getters for fields in error{\n}
{loop table.fields as field}
	{if !field.primary}
		{\t}public boolean get{field.javaAccessorName}InError(){{ return(getIsFieldInError(FIELD_{field.upperName})); }{\n}
	{endif}
{endloop}
{\n}

{\t}public void postValidate() {{{\n}
{\t}{\t}// lookups are expensive - if it isn't valid, ignore it{\n}
{\t}{\t}if(!isValid()) {{{\n}
{\t}{\t}{\t}return;{\n}
{\t}{\t}}{\n}
{--
    Go through and do some post form validation
}
{loop table.fields as field}
	{if fn:notNull[field.foreignKeyTable]}

//		{\t}{\t}if(!{field.foreignKeyTableLookup.javaClassName}Finder.primaryKeyExistsSilent((Long)getField("{field.name}").getParsedValue())) {{{\n}
//		{\t}{\t}{\t}setFieldInError("{field.name}");{\n}
//		{\t}{\t}}{\n}

	{endif}
{endloop}

{loop table.fields as field}
	{if field.index}

//		{\t}{\t}if({table.javaClassName}Finder.indexedColumnValueExistsFor{field.javaAccessorName}Silent(({field.javaType})getField("{field.name}").getParsedValue())) {{{\n}
//		{\t}{\t}{\t}setFieldInError("{field.name}");{\n}
//		{\t}{\t}}{\n}

	{endif}
{endloop}

{\t}}{\n}
}