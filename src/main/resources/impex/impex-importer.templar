package {database.package}.impex;{\n}{\n}

// - - - - thoughtfully generated by synapticloop h2zero - - - - {\n}
//    with the use of synapticloop templar templating language{\n}
//                 (/impex/impex-importer.templar){\n}{\n}

import synapticloop.h2zero.exception.H2ZeroParseException;{\n}
import java.math.*;{\n}
import java.sql.*;{\n}
{\n}


public class {table.javaClassName}Importer {{{\n}

{\t}public static void importLine(String line) throws H2ZeroParseException {{{\n}
{\t}{\t}String[] splits = line.split("\t");{\n}
{\t}{\t}if(splits.length != {table.fields.size}) {{{\n}
{\t}{\t}{\t}// we don't have enough tokens to import - we always import every field{\n}
{\t}{\t}{\t}throw new H2ZeroParseException(String.format("Insufficient fields, found '%d', required '%d'",{table.fields.size} , splits.length));{\n}
{\t}{\t}}{\n}
{\n}
{\t}{\t}// we are good to go{\n}
{\t}{\t}// for each field - we parse the value{\n}

{loop table.fields as field}
{\t}{\t}{field.javaType} {field.javaName} = ImpexConverter.convert{field.javaType}(splits[{fieldStatus.offset}], {field.nullable});{\n}
{endloop}

{\t}}{\n}
{\n}
}


